/* dist/js/notificationStream.bundle.min.js */
!function(i){var n={};function a(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return i[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=i,a.c=n,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)a.d(i,n,function(e){return t[e]}.bind(null,n));return i},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=43)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(2),o=i(1);var r=((n=o)&&n.__esModule?n:{default:n}).default.module("notificationStream",["robloxApp","ui.bootstrap"]).config(["languageResourceProvider",function(e){a.Lang.NotificationStreamResources&&e.setLanguageKeysFromFile(a.Lang.NotificationStreamResources)}]);t.default=r},function(e,t){e.exports=angular},function(e,t){e.exports=Roblox},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(1);var o=((n=a)&&n.__esModule?n:{default:n}).default.module("notificationStreamIcon",["robloxApp","notificationStream"]);t.default=o},function(e,t,i){"use strict";function o(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function r(e){return e.split("/").pop().replace(".html","")}var n={importFilesUnderPath:function(e){e.keys().forEach(e)},templateCacheGenerator:function(e,t,n,a){return e.module(t,[]).run(["$templateCache",function(i){n&&n.keys().forEach(function(e){var t=o(r(e));i.put(t,n(e))}),a&&a.keys().forEach(function(e){var t=o(r(e));i.put(t,function(e){return e.replace(/<\/?script[^>]*>/gi,"")}(a(e)))})}])}};e.exports=n},function(e,t,i){var n={"./gameUpdatesConstants.js":6,"./signalR.js":7};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=5},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(2),o=i(0);var r={endpoints:{getInteractedEndpoint:function(){return{url:a.EnvironmentUrls.notificationApi+"/v2/stream-notifications/game-update-notification-interacted",retryable:!1,withCredentials:!0}},getReadEndpoint:function(){return{url:a.EnvironmentUrls.notificationApi+"/v2/stream-notifications/game-update-notification-read",retryable:!1,withCredentials:!0}},getGameFollowingsEndpoint:function(e){return{url:a.EnvironmentUrls.followingsApi+"/v1/users/"+e+"/universes",retryable:!0,withCredentials:!0}},getFollowGameEndpoint:function(e,t){return{url:a.EnvironmentUrls.followingsApi+"/v1/users/"+e+"/universes/"+t,retryable:!1,withCredentials:!0}},getGameDetailsEndpoint:function(){return{url:a.EnvironmentUrls.gamesApi+"/v1/games/multiget-place-details",retryable:!0,withCredentials:!0}},getGameIconsEndpoint:function(){return{url:a.EnvironmentUrls.thumbnailsApi+"/v1/games/icons",retryable:!0,withCredentials:!0}},getGameIconsLegacyEndpoint:function(){return{url:a.EnvironmentUrls.gamesApi+"/v1/games/game-thumbnails",retryable:!0,withCredentials:!0}},getGameUpdatesEndpoint:function(){return{url:a.EnvironmentUrls.notificationApi+"/v2/stream-notifications/get-latest-game-updates",retryable:!0,withCredentials:!0}},getAbuseReportUrl:function(e,t,i){return a.EnvironmentUrls.websiteUrl+"/abusereport/gameupdate?id="+e+"&redirectUrl="+i}},apiParams:{gameUpdateBatchSize:100,placeDetailBatchSize:100,gameIconBatchSize:100,gameIconSize:"150x150",gameIconFormat:"png",gameIconWidth:150,gameIconHeight:150},gameNameMaxLength:30,gameUpdateInteractions:{played:"Played",seen:"Seen",unfollowed:"Unfollowed"}};((n=o)&&n.__esModule?n:{default:n}).default.constant("gameUpdatesConstants",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0);var o={notifications:{NotificationStream:"NotificationStream",ChatPrivacySettingNotifications:"ChatPrivacySettingNotifications"},types:{NewNotification:"NewNotification",NotificationsRead:"NotificationsRead",NotificationMarkedInteracted:"NotificationMarkedInteracted",NotificationRevoked:"NotificationRevoked",chatEnabled:"ChatEnabled",chatDisabled:"ChatDisabled"}};((n=a)&&n.__esModule?n:{default:n}).default.constant("signalR",o),t.default=o},function(e,t,i){var n={"./sortGameUpdatesFilter.js":9,"./sortNotificationsByEventDateDesc.js":10};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=8},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(t){return function(e){return t.sortGameUpdatesByCreatedDate(e,!1)}}r.$inject=["gameUpdatesUtility"],o.default.filter("sortGameUpdates",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(t){return function(e){return t.sortNotificationsByEventDate(e,!1)}}r.$inject=["notificationStreamUtility"],o.default.filter("sortNotificationsByEventDateDesc",r),t.default=r},function(e,t,i){var n={"./clickInCardDirective.js":12,"./developerMetricsAvailableDirective.js":13,"./friendRequestDirective.js":14,"./gameUpdateDirective.js":15,"./lazyLoadingDirective.js":16,"./notificationCardDirective.js":17,"./notificationContentDirective.js":18,"./notificationContentViewDirective.js":19,"./notificationStreamBaseDirective.js":20,"./notificationStreamBodyDirective.js":21,"./privateMessageDirective.js":22,"./testDirective.js":23};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=11},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var f=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(s,l,d,u){return{restrict:"A",scope:!0,link:function(c,e,t){e.bind("click",function(e){if(!e.target)return!1;var t=f.default.element(e.target),i=t.attr("type");if(e.target&&i){var n=f.default.copy(c.library.eventStreamMetaData);c.notification&&(n.notificationType=c.notification.notificationSourceType,c.interactNotification(c.notification));var a=s.eventNames.notificationStream[i];if(s.sendEventWithTarget(a,e.type,n),c.library.inApp){switch(e.stopPropagation(),e.preventDefault(),i){case d.links.settingLinkName:var o={feature:d.links.settingTabName,urlPath:d.links.settingLink};l.navigateToFeature(o,function(e){u.debug("navigateToFeature ---- status:"+e)});break;case d.links.friendRequestLinkName:o={feature:d.links.friendRequestTabName,urlPath:d.links.friendRequestLink};l.navigateToFeature(o,function(e){u.debug("openUserProfile ---- status:"+e)});break;case d.links.profileLinkName:var r;r=t.attr("href")&&t.attr("href").match(/users\/(\d+)/,"")?t.attr("href").match(/users\/(\d+)/,"")[1]:c.userIds[0],l.openUserProfile(parseInt(r),function(e){u.debug("openUserProfile ---- status:"+e)})}return!1}}})}}}o.$inject=["eventStreamService","hybridService","notificationStreamUtility","$log"],n.default.directive("clickInCard",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,s=i(2),a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(a,o,r,c,e){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:r.templates.developerMetricsAvailableTemplate,link:function(n,e,t){!function(){n.notificationSourceType=r.notificationSourceType,n.developerMetricsAvailableLayout={month:"",year:"",universeId:-1,gameName:"",gameNameLinked:"",rootPlaceId:-1,gameLinkUrl:null,gameIconUrl:null};var e=n.notification.metadataCollection;if(e&&0<e.length){var t=e[0],i=c.getAbsoluteUrl("/places/"+t.rootPlaceId+"/stats");n.developerMetricsAvailableLayout.month=function(e){for(var t=(new s.Intl).getMonthsList("long"),i=0,n=t.length;i<n;i++)if(t[i].value===e)return t[i].name;return""}(t.month),n.developerMetricsAvailableLayout.year=t.year,n.developerMetricsAvailableLayout.universeId=t.universeId,n.developerMetricsAvailableLayout.gameName=t.gameName,n.developerMetricsAvailableLayout.gameNameLinked='<a class="text-name small font-caption-header" href="'+i+'">'+t.gameName+"</a>",n.developerMetricsAvailableLayout.rootPlaceId=t.rootPlaceId,n.developerMetricsAvailableLayout.gameLinkUrl=i,o.multiGetGameIconsAsync([t.universeId]).then(function(e){e&&e.hasOwnProperty(t.universeId)&&(n.developerMetricsAvailableLayout.gameIconUrl=e[t.universeId])}),n.viewButtonHandler=function(){a.location.href=n.developerMetricsAvailableLayout.gameLinkUrl}}}()}}}r.$inject=["$window","gameUpdatesService","notificationStreamUtility","urlService","$log"],o.default.directive("developerMetricsAvailable",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(p,e){return{restrict:"A",replace:!0,scope:{notification:"=",library:"=",appMeta:"=",acceptFriend:"&",ignoreFriend:"&",chat:"&",interactNotification:"&"},templateUrl:p.templates.friendRequestTemplate,link:function(s,e,t){s.notificationSourceType=p.notificationSourceType,s.friendRequestLink=p.layout.friendRequestLink;var i=s.notification.metadataCollection,l=s.notification.notificationSourceType,n=i.length,d=s.notification.eventCount?s.notification.eventCount:n,u="",f="";!function(){if(s.userIds=[],s.notificationDisplayText="",i.forEach(function(e,t){var i=p.normalizeUser(l,e),n=i.userId,a=i.userName,o=s.library.userLibrary[n]&&s.library.userLibrary[n].profileLink?s.library.userLibrary[n].profileLink:p.getAbsoluteUrl(p.links.profileLink,{id:n});s.userIds.indexOf(n)<0&&s.userIds.push(n);var r=p.getUserHtmlTemplate(l,d),c=p.getFormatString(r,{userId:n,userName:a,profileLink:o});t<1?(c,u+=c):t<2&&(f+=c,2<d?", "+c+", ":2===d&&" and "+c)}),0===n)s.notificationDisplayText=p.normalizeYouHaveText(l,d);else if(2<d||n<d){var e=2<n?d-2:d-n;s.notificationDisplayText=p.normalizeMultipleDisplayText(l,u,f,e),s.requestConfirmedText=p.normalizeMultipleConfirmedText(l,u,f,e)}else 2===d?(s.notificationDisplayText=p.normalizeDoubleDisplayText(l,u,f),s.requestConfirmedText=p.normalizeDoubleConfirmedText(l,u,f)):(s.notificationDisplayText=p.normalizeSingleDisplayText(l,u),s.requestConfirmedText=p.normalizeSingleConfirmedText(l,u))}(),s.friendRequestActionType=p.friendRequestActionType,s.notification.notificationSourceType===p.notificationSourceType.friendRequestReceived?1!==n||1!==d||i[0].IsAccepted?1===n&&1===d&&i[0].IsAccepted?s.notification.friendRequestActionType=p.friendRequestActionType.chatBtn:s.notification.friendRequestActionType=p.friendRequestActionType.viewAllBtn:s.notification.friendRequestActionType=i[0].IsAccepted?p.friendRequestActionType.chatBtn:p.friendRequestActionType.acceptIgnoreBtns:s.notification.notificationSourceType===p.notificationSourceType.friendRequestAccepted&&1===n&&1===d&&(s.notification.friendRequestActionType=p.friendRequestActionType.chatBtn)}}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("friendRequest",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=i(2),f=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(o,r,c,e,s,l,t){var d=e.gameUpdateInteractions;return{restrict:"A",replace:!0,templateUrl:s.templates.gameUpdateTemplate,scope:{library:"=",appMeta:"=",contentViewManager:"=",notification:"=?",gameUpdateModel:"=?"},link:function(t,e,i){var n,a=$(e);if(!t.gameUpdateModel){if(!t.notification)return;if((n=t.notification.metadataCollection)&&0<n.length&&(t.gameUpdateModel=t.library.gameUpdateModels[n[0].UniverseId]),!t.gameUpdateModel)return}t.notificationSourceType=s.notificationSourceType,n&&1<n.length&&(t.isAggregated=!0,t.aggregatedDisplayText=c.formatAggregatedDisplayText(n[0].GameName,n[1].GameName,t.notification.eventCount-2)),t.gameNameMaxLength=c.gameNameMaxLength,t.actionMenuTemplate="game-update-action-popover-template",t.isActionMenuOpen=!1,t.goToGameDetails=function(){t.library.inApp?l.navigateToFeature({feature:"GameDetails",urlPath:t.gameUpdateModel.gameLinkUrlForApp}):o.location.href=t.gameUpdateModel.gameLinkUrl},t.playButtonHandler=function(){r.markGameUpdateInteractedAsync(t.gameUpdateModel.universeId,t.gameUpdateModel.createdOnKey,d.played,t.library.currentUserId),t.library.inApp?l.launchGame({placeId:t.gameUpdateModel.rootPlaceId,requestType:"RequestGame",isPartyLeader:!1}):u.GameLauncher.joinMultiplayerGame(t.gameUpdateModel.rootPlaceId,!0,!1)},t.viewGameUpdates=function(){t.contentViewManager.selectContentView(t.library.notificationContentViews.gameUpdates),f.default.forEach(t.library.gameUpdateModels,function(e){e.seen||r.markGameUpdateInteractedAsync(e.universeId,e.createdOnKey,d.seen,t.library.currentUserId).then(function(){e.seen=!0},function(){})})},t.followGame=function(){r.followGameAsync(t.library.currentUserId,t.gameUpdateModel.universeId).then(function(){a.focus(),t.gameUpdateModel.isUnfollowed=!1,t.gameUpdateModel.updateMessage||c.getGameUpdatesAsync([t.gameUpdateModel.universeId],t.library.gameUpdateModels,null)},function(){})},t.unfollowGame=function(e){e&&e.stopPropagation&&e.stopPropagation(),r.unfollowGameAsync(t.library.currentUserId,t.gameUpdateModel.universeId).then(function(){a.focus(),t.gameUpdateModel.isUnfollowed=!0,t.isActionMenuOpen=!1,r.markGameUpdateInteractedAsync(t.gameUpdateModel.universeId,t.gameUpdateModel.createdOnKey,d.unfollowed,t.library.currentUserId)},function(){})},t.reportAbuse=function(){r.reportAbuse(t.gameUpdateModel.universeId,new Date(t.gameUpdateModel.createdOn))},t.closeActionMenu=function(){t.isActionMenuOpen=!1}}}}o.$inject=["$window","gameUpdatesService","gameUpdatesUtility","gameUpdatesConstants","notificationStreamUtility","hybridService","$log"],n.default.directive("gameUpdate",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var c=i(2),s=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(a,o,r){return{restrict:"A",scope:!0,link:function(i,n,e){i.callbackLazyLoad=function(){if(!i.notificationApiParams)return!1;i.notificationApiParams.loadMoreNotifications&&(i.layout.notiticationsLazyLoadingEnabled=!0,a.getRecentNotifications(i.notificationApiParams.startIndexOfNotifications,i.notificationApiParams.pageSizeOfNotifications).then(function(e){i.layout.notiticationsLazyLoadingEnabled=!1,e&&0<e.length?(i.buildNotificationsList(e),i.notificationApiParams.startIndexOfNotifications=i.notificationApiParams.startIndexOfNotifications+i.notificationApiParams.pageSizeOfNotifications,e.length<i.notificationApiParams.pageSizeOfNotifications&&(i.notificationApiParams.loadMoreNotifications=!1,i.notificationApiParams.startIndexOfNotifications=0)):(i.notificationApiParams.loadMoreNotifications=!1,i.notificationApiParams.startIndexOfNotifications=0)},function(){i.layout.notiticationsLazyLoadingEnabled=!1,r.debug("---error from get Notificaitons in lazyLoadingDirective.js---")}))},i.setupScrollbar=function(){n.mCustomScrollbar({autoExpandScrollbar:!1,scrollInertia:5,contentTouchScroll:1,mouseWheel:{preventDefault:!0},callbacks:{onTotalScrollOffset:100,onTotalScroll:i.callbackLazyLoad,onOverflowYNone:i.callbackLazyLoad}})},i.destroyScrollbar=function(){r.debug("----- destroyScrollbar ----"),n.mCustomScrollbar("destroy")};var t=i.$watch(function(){return i.layout&&i.layout.isLazyLoadingRequested},function(e,t){s.default.isDefined(e)&&e!==t&&(r.debug("----- initializeLayout ----"),e?i.library.inApp?(c.Scrollbar.setUpOverflowY(n,i.callbackLazyLoad),c.Scrollbar.listenToScroll(o,null,i.callbackLazyLoad)):i.setupScrollbar():i.library.inApp||i.destroyScrollbar())},!0);i.$on("$destroy",function(){t&&t()})}}}o.$inject=["notificationStreamService","$document","$log"],n.default.directive("lazyLoading",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(n,a){var i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"},o=function(){var e,t=document.createElement("supportedEvent");for(e in i)if(r.default.isDefined(t.style[e]))return i[e]}();return{restrict:"A",link:function(i,e,t){e.bind(o,function(e){n.debug("got a css transition event",e),0<=e.target.className.search("slide-out-left")&&i.$evalAsync(function(){i.removeNotification(i.notification.id)})}),i.updateNotificationSetting=function(t){a.updateNotificationSettings(i.notification.notificationSourceType,t).then(function(e){n.debug("turnOffNotification -- success",e),i.notification.isTurnOff=!t},function(e){n.debug("turnOffNotification --fail")})}}}}o.$inject=["$log","notificationStreamService"],n.default.directive("notificationCard",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationContentTemplate}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("notificationContent",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(e,t){return{restrict:"A",replace:!0,transclude:!0,templateUrl:e.templates.notificationContentViewTemplate,scope:{library:"=",contentViewManager:"=",viewId:"@",isActive:"=?"},link:function(e,t,i){e.contentViewManager.addContentView(e)}}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("notificationContentView",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamBaseTemplate}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("notificationStreamBase",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(n,a){return{restrict:"A",replace:!0,scope:!0,link:function(t,i,e){n.on("click touchstart",function(e){t.layout&&(!t.layout.isStreamBodyInteracted&&0<i.has(e.target).length?t.layout.isStreamBodyInteracted=!0:t.layout.isStreamBodyInteracted&&0<!i.has(e.target).length&&(t.layout.isStreamBodyInteracted=!1),a.debug(" ------------------scope.layout.isStreamBodyInteracted----------------- "+t.layout.isStreamBodyInteracted))})}}}r.$inject=["$document","$log"],o.default.directive("notificationStreamBody",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(a,e){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:a.templates.privateMessageTemplate,link:function(n,e,t){!function(){n.notificationSourceType=a.notificationSourceType,n.friendRequestLink=a.layout.friendRequestLink,n.privateMessageLayout={displayUserId:null,displayUserName:"",messagePreview:"",isStacked:!1};var e=n.notification.metadataCollection,t=n.notification.notificationSourceType;if((1<n.notification.eventCount||e&&0===e.length)&&(n.privateMessageLayout.isStacked=!0),e&&0<e.length){var i=a.normalizeUser(t,e[0]);n.privateMessageLayout.displayUserId=i.userId,n.privateMessageLayout.displayUserName=i.userName,n.privateMessageLayout.messagePreview=e[0].BodyPreview}}()}}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("privateMessage",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.testTemplate,link:function(t,e,i){var n=t.notification.metadataCollection;t.notificationDisplayText="",n.forEach(function(e){t.notificationDisplayText+=e.Detail})}}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("test",r),t.default=r},function(e,t,i){var n={"./notificationStreamController.js":25,"./notificationsController.js":26};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=24},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var f=i(2),p=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(r,t,e,i,c,n,a,o,s,l,d){r.updatePopoverLayout=function(){f.Popover&&e(function(){return f.Popover.setUpTrianglePosition(r.layout.dataBindSelector,r.layout.dataContainerSelector)})},r.buildNotificationsList=function(e){var o=[];e.forEach(function(e){var t=e.metadataCollection,a=e.notificationSourceType;c.isNotificationTypeValid(a)&&(c.isGameUpdateNotification(a)||t.forEach(function(e){var t=c.normalizeUser(a,e);if(t&&null!=t.userId&&null!=t.userName){var i=t.userId,n=t.userName;if(-1<r.library.userIdList.indexOf(i))return!1;o.push(i),r.library.userIdList.push(i),r.library.userLibrary[i]={id:i,name:n,profileLink:c.getAbsoluteUrl(c.links.profileLink,{id:i})}}}),e.isClickable=c.isCardClickable(e),r.notificationIds.indexOf(e.id)<0&&r.notificationIds.push(e.id),r.notifications[e.id]=e)}),r.layout.emptyNotificationEnabled=0===r.notificationIds.length,0<o.length&&n.getUserAvatar(o).then(function(e){e&&0<e.length&&e.forEach(function(e,t){r.library.userLibrary[o[t]].thumbnail=e})},function(){d.debug("----- getUserAvatar request failed ----")})},r.buildGameUpdateNotifications=function(n){if(n&&0!==n.length){var a=r.library.gameUpdateModels;o.getGameFollowingsForUserAsync(r.library.currentUserId).then(function(e){var t,i=[];for(t=0;t<e.length;t++)i.push(e[t].universeId);return s.getGameUpdatesAsync(i,a)}).then(function(e){var t,i=s.aggregateGameUpdateNotifications(n,a);i&&(r.notifications[i.id]=i,r.notificationIds.unshift(i.id),s.fillGameDetails(a),1===i.metadataCollection.length&&(t=a[i.metadataCollection[0].UniverseId],o.markGameUpdateInteractedAsync(t.universeId,t.createdOnKey,l.gameUpdateInteractions.seen,r.library.currentUserId)))})}},r.getRecentNotifications=function(){r.layout.getRecentDataInitialized=!1,i.getRecentNotifications(r.notificationApiParams.startIndexOfNotifications,r.notificationApiParams.pageSizeOfNotifications).then(function(e){var t=[],i=[];r.layout.getRecentDataInitialized=!0,r.layout.isGetRecentDataLoadedRequested=!1,e&&0<e.length&&(p.default.forEach(e,function(e){c.isGameUpdateNotification(e.notificationSourceType)?t.push(e):i.push(e)}),r.buildNotificationsList(i),0<t.length&&r.buildGameUpdateNotifications(t),r.layout.isLazyLoadingRequested=!0,e.length===r.notificationApiParams.pageSizeOfNotifications&&(r.notificationApiParams.startIndexOfNotifications=r.notificationApiParams.startIndexOfNotifications+r.notificationApiParams.pageSizeOfNotifications,r.notificationApiParams.loadMoreNotifications=!0))},function(){d.debug("--- getRecentNotifications call failed ----- "),r.layout.getRecentDataInitialized=!0})},r.clearUnreadNotifications=function(){0<r.library.unreadNotifications&&(r.library.unreadNotifications=0,t.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:0,isNotificationContentOpen:r.layout.isNotificationContentOpen}))},r.openNotificationStream=function(){r.layout.isGetRecentDataLoadedRequested&&(r.resetNotificationStreamData(),r.getRecentNotifications()),0<r.library.unreadNotifications&&i.clearUnread().then(function(){r.clearUnreadNotifications()},function(){d.debug("--- clearUnread call failed ----- ")})},r.toggleNotificationContent=function(e){e?r.layout.isNotificationContentOpen=!1:(r.layout.isNotificationContentOpen=!r.layout.isNotificationContentOpen,r.layout.isNotificationContentOpen&&r.layout.isGetRecentDataLoadedRequested&&(r.openNotificationStream(),r.updatePopoverLayout())),r.layout.isNotificationContentOpen&&r.layout.bannerEnabled&&(r.layout.bannerEnabled=!1),r.layout.isLazyLoadingRequested&&(r.layout.isLazyLoadingRequested=!1)},r.getUnreadNotificationCount=function(){i.unreadCount().then(function(e){e&&(r.library.unreadNotifications=e.unreadNotifications,r.layout.isNotificationContentOpen?r.layout.bannerText=c.textTemplate.newNotification(r.library.unreadNotifications):t.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:e.unreadNotifications,isNotificationContentOpen:r.layout.isNotificationContentOpen}))},function(){d.debug("--- unreadCount call failed ----- ")})},r.resetNotificationStreamData=function(){r.notificationIds=[],r.notifications={},r.notificationApiParams&&(r.notificationApiParams.startIndexOfNotifications=0)},r.reloadNotificationStreamData=function(){r.resetNotificationStreamData(),0<r.library.unreadNotifications&&i.clearUnread(),r.getRecentNotifications(),r.layout.bannerEnabled=!1},r.updateNewNotificationInfo=function(){r.layout.isGetRecentDataLoadedRequested=!0,r.getUnreadNotificationCount(),r.layout.isNotificationContentOpen&&r.$evalAsync(function(){r.layout.bannerEnabled=!0})},r.updateSettingsInLibrary=function(e){r.library.currentUserId=f.CurrentUser.userId,r.library.inApp=!!f.DeviceMeta&&(0,f.DeviceMeta)().isInApp,r.library.isPhone=!!f.DeviceMeta&&(0,f.DeviceMeta)().isPhone,r.library.inAndroidApp=!!f.DeviceMeta&&(0,f.DeviceMeta)().isAndroidApp,r.library.iniOSApp=!!f.DeviceMeta&&(0,f.DeviceMeta)().isIosApp,r.library.inUWPApp=!!f.DeviceMeta&&(0,f.DeviceMeta)().isUWPApp,r.library.bannerDismissTimeSpan=e.bannerDismissTimeSpan,r.library.signalRDisconnectionResponseInMilliseconds=e.signalRDisconnectionResponseInMilliseconds,r.library.eventStreamMetaData={userId:r.library.currentUserId,inApp:r.library.inApp},r.library.canLaunchGameFromGameUpdate=e.canLaunchGameFromGameUpdate},r.handleSignalRSuccess=function(){r.$evalAsync(function(){r.layout.errorBannerEnabled=!1})},r.handleSignalRError=function(){e(function(){r.layout.errorBannerEnabled=!0,r.layout.errorText=c.textTemplate.noNetworkConnectionText()},r.library.signalRDisconnectionResponseInMilliseconds)},r.handleNotificationStreamNotification=function(e){switch(d.debug("--------- this is NotificationStream subscription -----------"+e.Type),e.Type){case c.signalRType.NewNotification:r.updateNewNotificationInfo();break;case c.signalRType.NotificationsRead:r.clearUnreadNotifications();break;case c.signalRType.NotificationRevoked:r.getUnreadNotificationCount(),r.layout.isStreamBodyInteracted||r.reloadNotificationStreamData()}},r.handleChatPrivacySettingNotification=function(t){d.debug("--------- this is ChatPrivacySettingNotifications subscription -----------"+t.Type);try{switch(t.Type){case c.signalRType.chatEnabled:r.library.isChatDisabledByPrivacySetting=!1;break;case c.signalRType.chatDisabled:r.library.isChatDisabledByPrivacySetting=!0}}catch(e){var i="ChatPrivacySettingNotifications:"+t.Type+": ";e&&e.message&&(i+=e.message),d.debug(i)}},r.getChatPrivacySetting=function(){i.getChatPrivacySettings().then(function(e){r.library.isChatDisabledByPrivacySetting=e&&!e.chatEnabled},function(e){d.debug(e)})},r.initializeRealTimeSubscriptions=function(){if(p.default.isDefined(f.RealTime)){var e=f.RealTime.Factory.GetClient();e.SubscribeToConnectionEvents(r.handleSignalRSuccess,r.handleSignalRSuccess,r.handleSignalRError,c.notificationsName.NotificationStream),e.Subscribe(c.notificationsName.NotificationStream,r.handleNotificationStreamNotification),e.Subscribe(c.notificationsName.ChatPrivacySettingNotifications,r.handleChatPrivacySettingNotification)}},function(){try{r.library=c.library,r.resetNotificationStreamData(),f.Popover&&f.Popover.init(),r.getChatPrivacySetting(),i.initialize().then(function(e){e&&(c.layout.pageDataInitialized=!0,r.updateSettingsInLibrary(e))},function(){d.debug("----- initialize data request failed ----")})}catch(e){var t="initializePageData:";e&&e.message&&(t+=e.message),d.debug(t)}}(),t.bind("Roblox.Popover.Status",function(e,t){d.debug("notificationStreamController"),r.layout&&r.$evalAsync(function(){if(!r.layout.isNotificationContentOpen&&!t.isHidden){var e=p.default.copy(r.library.eventStreamMetaData);e.countOfUnreadNotification=r.library.unreadNotifications,a.sendEventWithTarget(a.eventNames.notificationStream.openContent,t.eventType,e)}r.toggleNotificationContent(t.isHidden)})});var u=r.$watch(function(){return c.layout.pageDataInitialized},function(e,t){p.default.isDefined(e)&&e&&e!==t&&(d.debug("----- initializeLayout ----"),r.layout=p.default.copy(c.layout),r.notificationApiParams=p.default.copy(c.notificationApiParams),r.getUnreadNotificationCount(),r.library.inApp&&(r.openNotificationStream(),r.layout.isNotificationContentOpen=!0),r.initializeRealTimeSubscriptions())});r.$on("$destroy",function(){u&&u()})}o.$inject=["$scope","$document","$timeout","notificationStreamService","notificationStreamUtility","userService","eventStreamService","gameUpdatesService","gameUpdatesUtility","gameUpdatesConstants","$log"],n.default.controller("notificationStreamController",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var v=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(o,a,r,c,s,l,d,u,f){function p(e,t,i){var n=o.notifications[t],a=v.default.copy(o.library.eventStreamMetaData);a.notificationType=n.notificationSourceType,s.sendEventWithTarget(e,i,a)}var i,m=12,g=13;o.acceptFriend=function(e,i,n){f.debug("---------------- acceptFriend --------- ");var t=o.notifications[i];o.interactNotification(t),a.acceptFriend(o.library.currentUserId,e).then(function(e){if(v.default.isUndefined(e)||e.success){var t=o.notifications[i];t.friendRequestActionType=r.friendRequestActionType.chatBtn,t.metadataCollection[0].IsAccepted=!0,t.isFlipped=!0,u.triggerHandler("Roblox.Friends.CountChanged"),p(s.eventNames.notificationStream.acceptFriendRequest,i,n.type)}else e.errorId===m?(o.layout.errorText=r.normalizeSelfMaxFriendsErrorText(),o.layout.errorBannerEnabled=!0):e.errorId===g&&(o.layout.errorText=r.normalizeOtherMaxFriendsErrorText(),o.layout.errorBannerEnabled=!0)})},o.ignoreFriend=function(e,t,i){f.debug("---------------- ignoreFriend --------- ");var n=o.notifications[t];o.interactNotification(n),a.ignoreFriend(o.library.currentUserId,e).then(function(){o.notifications[t].isSlideOut=!0,p(s.eventNames.notificationStream.ignoreFriendRequest,t,i.type)})},o.removeNotification=function(e){f.debug("---------------- removeNotification --------- notificationId:  "+e);var t=o.notificationIds.indexOf(e);o.notificationIds.splice(t,1),delete o.notifications[e]},o.chat=function(e,t,i){if(!o.library.isChatDisabledByPrivacySetting){var n=o.notifications[t];o.interactNotification(n);var a=d.buildPermissionVerifier(o.library);a.uwpApp.hybridRequired=!0,d.startChat(e,a),p(s.eventNames.notificationStream.chat,t,i.type)}},o.interactNotification=function(e){e.isInteracted||a.markInteracted(e.id).then(function(){e.isInteracted=!0})},o.clickCard=function(e){var t="",i={};switch(e.notificationSourceType){case r.notificationSourceType.friendRequestReceived:if(o.interactNotification(e),1<e.eventCount||0===e.metadataCollection.length)t=r.links.friendRequestLink,o.library.inApp?(i={feature:r.links.friendRequestTabName,urlPath:t},c.navigateToFeature(i,function(e){f.debug("openUserFriendsPage ---- status:"+e)})):window.location.href=l.getAbsoluteUrl(t);else if(e.metadataCollection&&0<e.metadataCollection.length){var n=e.metadataCollection[0];t=r.links.profileLink;var a=n.SenderUserId;o.library.inApp?c.openUserProfile(parseInt(a),function(e){f.debug("openUserProfile ---- status:"+e)}):window.location.href=r.getAbsoluteUrl(t,{id:a})}break;case r.notificationSourceType.friendRequestAccepted:o.interactNotification(e),t=r.links.friendsLink,o.library.inApp?(i={feature:r.links.friendsTabName,urlPath:t},c.navigateToFeature(i,function(e){f.debug("openUserFriendsPage ---- status:"+e)})):window.location.href=l.getAbsoluteUrl(t);break;case r.notificationSourceType.privateMessageReceived:if(o.interactNotification(e),1<e.eventCount||0===e.metadataCollection.length)t=r.links.inboxLink;else if(e.metadataCollection&&0<e.metadataCollection.length){n=e.metadataCollection[0];t=r.links.inboxLink+r.links.inboxMessageDetailQuery+n.MessageId}o.library.inApp?(i={feature:r.links.inboxTabName,urlPath:t},c.navigateToFeature(i,function(e){f.debug("openUserProfile ---- status:"+e)})):window.location.href=l.getAbsoluteUrl(t);break;case r.notificationSourceType.developerMetricsAvailable:o.interactNotification(e)}},o.notificationSourceType=r.notificationSourceType,o.contentViewManager=(i={},{addContentView:function(e){i[e.viewId]=e},selectContentView:function(e){var t=i[e];t&&(v.default.forEach(i,function(e){e.isActive=!1}),t.isActive=!0)}}),u.bind("Roblox.Popover.Status",function(e,t){f.debug("notificationsController"),t.isOpen||o.contentViewManager.selectContentView(o.library.notificationContentViews.main)})}o.$inject=["$scope","notificationStreamService","notificationStreamUtility","hybridService","eventStreamService","urlService","chatDispatchService","$document","$log"],n.default.controller("notificationsController",o),t.default=o},function(e,t,i){var n={"./gameUpdatesService.js":28,"./gameUpdatesUtility.js":29,"./layoutLibraryI18nService.js":30,"./notificationStreamService.js":31,"./notificationStreamUtility.js":32};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=27},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var c=i(2),d=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(s,l,e,n,t,a){var r=t.endpoints,i=t.apiParams;function o(e,t,i,n){var a,o,r=[],c=0;for(o=t.slice(c,i);0<o.length&&c<t.length;)a=n(o),r.push(s.httpGet(e,a)),c+=i,o=t.slice(c,c+i);return l.all(r)}return{markGameUpdateReadAsync:function(e,t,i){var n=r.getReadEndpoint(),a={universeId:e,createdOn:t.toString(),currentUserId:i};return s.httpPost(n,a)},markGameUpdateInteractedAsync:function(e,t,i,n){var a=r.getInteractedEndpoint(),o={universeId:e,createdOnKey:t,interactionType:i,currentUserId:n};return s.httpPost(a,o)},multiGetPlaceDetailsAsync:function(e){return e&&0!==e.length?function(e){return o(r.getGameDetailsEndpoint(),e,i.placeDetailBatchSize,function(e){return{placeIds:e}}).then(function(e){var t={};return e&&0!==e.length?(d.default.forEach(e,function(e){e&&d.default.forEach(e,function(e){t[e.placeId]={universeId:e.universeId,isPlayable:e.isPlayable,imageToken:e.imageToken}})}),t):null})}(e):l(function(e,t){e(null)})},multiGetGameIconsAsync:function(e){return e&&0!==e.length?function(e){return o(r.getGameIconsEndpoint(),e,i.gameIconBatchSize,function(e){return{size:i.gameIconSize,format:i.gameIconFormat,universeIds:e}}).then(function(e){var t={};return e&&0!==e.length?(d.default.forEach(e,function(e){e&&e.data&&d.default.forEach(e.data,function(e){t[e.targetId]=e.imageUrl})}),t):null})}(e):l(function(e,t){e(null)})},multiGetGameUpdatesAsync:function(e,t){return e&&0!==e.length?function(e,t){return o(r.getGameUpdatesEndpoint(),e,i.gameUpdateBatchSize,function(e){return{universeIds:e}}).then(function(e){var t=[];return e&&0!==e.length?(d.default.forEach(e,function(e){e&&d.default.forEach(e,function(e){t.push(e)})}),t):null})}(e):l(function(e,t){e(null)})},getGameFollowingsForUserAsync:function(e){var t=r.getGameFollowingsEndpoint(e);return s.httpGet(t,{})},followGameAsync:function(e,t){var i=r.getFollowGameEndpoint(e,t);return s.httpPost(i,{})},unfollowGameAsync:function(e,t){var i=r.getFollowGameEndpoint(e,t);return s.httpDelete(i,{})},reportAbuse:function(e,t){var i=n.getAbsoluteUrl(r.getAbuseReportUrl(e,t,encodeURIComponent(a.location.href)));c.AbuseReportDispatcher?c.AbuseReportDispatcher.triggerUrlAction(i):a.location.href=i}}}o.$inject=["httpService","$q","$log","urlService","gameUpdatesConstants","$window"],n.default.factory("gameUpdatesService",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var u=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(r,s,e,t,n,i){var l=t.parseEpochMilliseconds,d=i.gameNameMaxLength;return{formatAggregatedDisplayText:function(e,t,i){return 0===i?n.gameUpdates.formatDisplayTextDouble(e,t):n.gameUpdates.formatDisplayTextMultiple(e,t,i)},getGameUpdatesAsync:function(e,c,t){return r.multiGetGameUpdatesAsync(e,t?new Date(t.getTime()-6e4):null).then(function(e){var t,i,n,a,o,r;if(!e||0===e.length)return null;for(t=0;t<e.length;t++)i=e[t],a=l(i.createdOn),c.hasOwnProperty(i.universeId)?((n=c[i.universeId]).updateMessage=i.content,n.createdOn=a,n.createdOnKey=i.createdOnKey):c[i.universeId]={universeId:i.universeId,rootPlaceId:i.rootPlaceId,updateMessage:i.content,createdOn:a,createdOnKey:i.createdOnKey,gameName:i.universeName,truncatedGameName:(o=i.universeName,r=void 0,r=o,o&&o.length>d&&(r=o.substr(0,d-3)+"..."),r),isPlayable:null,gameIconUrl:null,gameLinkUrl:i.rootPlaceId?s.getAbsoluteUrl("/games/"+i.rootPlaceId+"?originatorType=GameUpdateNotification&originatorId="+a):null,gameLinkUrlForApp:i.rootPlaceId?"games/"+i.rootPlaceId+"?originatorType=GameUpdateNotification&originatorId="+a:null};return e})},fillGameDetails:function(n,e){var t,i,a=[],o=[];for(t in n)n.hasOwnProperty(t)&&(null===(i=n[t]).isPlayable&&a.push(i.rootPlaceId),null===i.gameIconUrl&&o.push(i.universeId));0!==a.length&&(r.multiGetPlaceDetailsAsync(a).then(function(e){if(e)return u.default.forEach(e,function(e,t){var i=n[e.universeId];i&&(i.isPlayable=e.isPlayable)}),e}),0<o.length&&r.multiGetGameIconsAsync(o).then(function(e){!function(e){e&&u.default.forEach(e,function(e,t){var i=n[t];i&&(i.gameIconUrl=e)})}(e)}))},aggregateGameUpdateNotifications:function(e,i){if(!e||0===e.length)return null;var n=null,a=null,o=null,r=0,c={},s={};return s.id=e[0].id,s.notificationSourceType=e[0].notificationSourceType,s.metadataCollection=[],u.default.forEach(e,function(e){var t;e.eventDate&&(t=l(e.eventDate),(!n||n<t)&&(n=t,o=e.eventDate),(!a||t<a)&&(a=t)),u.default.forEach(e.metadataCollection,function(e){i.hasOwnProperty(e.UniverseId)&&!c.hasOwnProperty(e.UniverseId)&&(s.metadataCollection.push(e),c[e.UniverseId]=!0)}),e.eventCount&&(r+=e.eventCount)}),s.eventDate=o,s.minEventDate=new Date(a),s.eventCount=Math.max(r,s.metadataCollection.length),0<s.metadataCollection.length?s:null},sortGameUpdatesByCreatedDate:function(t,i){if(!t)return null;var e=Object.keys(t).map(function(e){return t[e]});return e.sort(function(e,t){return i?e.createdOn-t.createdOn:t.createdOn-e.createdOn}),e}}}o.$inject=["gameUpdatesService","urlService","$log","notificationStreamUtility","layoutLibraryService","gameUpdatesConstants"],n.default.factory("gameUpdatesUtility",o),t.default=o},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function r(e,t){var n=t;return{links:{profileLinkName:"goToProfilePage",profileLink:"/users/{id}/profile",friendRequestLinkName:"viewAllFriendRequests",friendRequestTabName:"Friends",friendRequestLink:"/users/friends#!/friend-requests",settingLinkName:"goToSettingPage",settingTabName:"Settings",settingLink:"/my/account#!/notifications",friendsTabName:"Friends",friendsLink:"/users/friends",inboxTabName:"Messages",inboxLink:"/my/messages/#!/inbox",inboxMessageDetailQuery:"?conversationId="},stringTemplates:{boldLink:"<a class='font-bold'>{username}</a>",userLink:"<a class='text-name small font-caption-header' type='goToProfilePage' user_id='{userid}' href='{profilelink}'>{username}</a>"},newFriendRequests:function(e){return n.get("Message.YouHaveNewFriendRequests",{numberOfRequests:e})},newFriends:function(e){return n.get("Message.YouHaveNewFriends",{numberOfFriends:e})},friendRequestAcceptedSingle:function(e){return n.get("Message.FriendRequestAcceptedSingle",{userOne:e})},friendRequestAcceptedDouble:function(e,t){return n.get("Message.FriendRequestAcceptedDouble",{userOne:e,userTwo:t})},friendRequestAcceptedMultiple:function(e,t,i){return n.get("Message.FriendRequestAcceptedMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},friendRequestSentSingle:function(e){return n.get("Message.FriendRequestSentSingle",{userOne:e})},friendRequestSentDouble:function(e,t){return n.get("Message.FriendRequestSentDouble",{userOne:e,userTwo:t})},friendRequestSentMultiple:function(e,t,i){return n.get("Message.FriendRequestSentMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},confirmAcceptedSingle:function(e){return n.get("Message.ConfirmAcceptedSingle",{userOne:e})},confirmAcceptedDouble:function(e,t){return n.get("Message.ConfirmAcceptedDouble",{userOne:e,userTwo:t})},confirmAcceptedMultiple:function(e,t,i){return n.get("Message.ConfirmAcceptedMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},confirmSentSingle:function(e){return n.get("Message.ConfirmSentSingle",{userOne:e})},confirmSentDouble:function(e,t){return n.get("Message.ConfirmSentDouble",{userOne:e,userTwo:t})},confirmSentMultiple:function(e,t,i){return n.get("Message.ConfirmSentMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},textTemplate:{newNotification:function(e){return n.get("Message.NumberofNewNotifications",{notificationCount:e})},noNetworkConnectionText:function(){return n.get("Label.NoNetworkConnectionText")}},tooManyFriendsSelf:function(){return n.get("Message.TooManyFriendsSelf")},tooManyFriendsOther:function(){return n.get("Message.TooManyFriendsOther")},friendRequestActionType:{acceptIgnoreBtns:"AcceptIgnoreBtns",chatBtn:"chatBtn",viewAllBtn:"ViewAllBtn"},directiveTemplatesName:{notificationIndicatorTemplate:"notification-indicator",notificationContentTemplate:"notification-content",friendRequestReceivedTemplate:"friend-request-received",friendRequestAcceptedTemplate:"friend-request-accepted",friendRequestTemplate:"friend-request",privateMessageTemplate:"private-message",developerMetricsAvailableTemplate:"developer-metrics-available",testTemplate:"test",notificationStreamBaseTemplate:"notification-stream-base",notificationStreamIconTemplate:"notification-stream-icon",notificationContentViewTemplate:"notification-content-view-template",gameUpdateTemplate:"game-update-template",gameUpdateActionPopoverTemplate:"game-update-action-popover-template"},notificationSourceType:{test:"Test",friendRequestReceived:"FriendRequestReceived",friendRequestAccepted:"FriendRequestAccepted",privateMessageReceived:"PrivateMessageReceived",developerMetricsAvailable:"DeveloperMetricsAvailable",gameUpdate:"GameUpdate"},gameUpdates:{formatDisplayTextDouble:function(e,t){return n.get("Message.AggregatedGameUpdateDouble",{gameOne:"<span class='font-bold font-caption-header'>"+e+"</span>",gameTwo:"<span class='font-bold font-caption-header'>"+t+"</span>"})},formatDisplayTextMultiple:function(e,t,i){return n.get("Message.AggregatedGameUpdateMultiple",{gameOne:"<span class='font-bold font-caption-header'>"+e+"</span>",gameTwo:"<span class='font-bold font-caption-header'>"+t+"</span>",otherCount:i})}}}}r.$inject=["$log","languageResource"],o.default.factory("layoutLibraryService",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,r=i(2),a=i(0),o=(n=a)&&n.__esModule?n:{default:n};function c(a,e,t){var i=r.EnvironmentUrls.notificationApi,n=r.EnvironmentUrls.chatApi,o=i+"/v2/stream-notifications/metadata";return{endpoints:{acceptFriendRequest:{url:t.getAbsoluteUrl("/api/friends/acceptfriendrequest"),retryable:!1},ignoreFriendRequest:{url:t.getAbsoluteUrl("/api/friends/declinefriendrequest"),retryable:!1},initializeData:{url:o,retryable:!0},unreadCount:{url:i+"/v2/stream-notifications/unread-count",retryable:!0,withCredentials:!0},getRecent:{url:i+"/v2/stream-notifications/get-recent",retryable:!0,withCredentials:!0},clearUnread:{url:i+"/v2/stream-notifications/clear-unread",retryable:!1,withCredentials:!0},markInteracted:{url:i+"/v2/stream-notifications/mark-interacted",retryable:!1,withCredentials:!0},updateNotificationSettings:{url:i+"/v2/notifications/update-notification-settings",retryable:!1,withCredentials:!0},getChatPrivacySettings:{url:n+"/v2/chat-settings",retryable:!1,withCredentials:!0}},initialize:function(){return a.httpGet(this.endpoints.initializeData,{})},getChatPrivacySettings:function(){return a.httpGet(this.endpoints.getChatPrivacySettings,{})},unreadCount:function(){return a.httpGet(this.endpoints.unreadCount,{})},clearUnread:function(){return a.httpPost(this.endpoints.clearUnread,{})},getRecentNotifications:function(e,t){var i={startIndex:e,maxRows:t};return a.httpGet(this.endpoints.getRecent,i)},markInteracted:function(e){var t={eventId:e};return a.httpPost(this.endpoints.markInteracted,t)},acceptFriend:function(e,t){var i={targetUserID:t,invitationID:e};return a.httpPost(this.endpoints.acceptFriendRequest,i)},ignoreFriend:function(e,t){var i={targetUserID:t,invitationID:e};return a.httpPost(this.endpoints.ignoreFriendRequest,i)},updateNotificationSettings:function(e,t){var i={notificationSourceType:e,receiverDestinationType:"NotificationStream",isEnabled:t},n=[];return n.push(i),a.httpPost(this.endpoints.updateNotificationSettings,n)}}}c.$inject=["httpService","$log","urlService"],o.default.factory("notificationStreamService",c),t.default=c},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var c=i(2),s=a(i(1)),n=a(i(0));function a(e){return e&&e.__esModule?e:{default:e}}function o(e,a,t){var o=a.notificationSourceType,i=a.links,n=a.stringTemplates;function r(e){if(!e)return null;if(e.getTime)return e.getTime();if("string"!=typeof e)return null;var t=/Date\((\d+)\)/.exec(e);return t?parseInt(t[1]):new Date(e).getTime()||null}return{templates:a.directiveTemplatesName,links:i,textTemplate:a.textTemplate,stringTemplates:n,layout:{pageDataInitialized:!1,firstTimeNotificationStream:!1,getRecentDataInitialized:!1,isNotificationContentOpen:!1,isLazyLoadingRequested:!1,isGetRecentDataLoadedRequested:!0,notificationsScrollbarSelector:"#notification-stream-scrollbar",settingLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.settingLink):i.settingLink,friendRequestLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.friendRequestLink):i.friendRequestLink,bannerEnabled:!1,emptyNotificationEnabled:!1,notificationsLazyLoadingEnabled:!1,isNotificationsLoading:!1,isStreamBodyInteracted:!1,bannerText:"",errorText:"",dataBindSelector:"#notification-stream",dataContainerSelector:"#notification-stream-container"},notificationApiParams:{startIndexOfNotifications:0,pageSizeOfNotifications:10,loadMoreNotifications:!1},library:{unreadNotifications:0,userIdList:[],userLibrary:{},prefixLocalStoragekey:"user_",inApp:!1,isPhone:!1,isTouch:!!c.DeviceFeatureDetection&&c.DeviceFeatureDetection.isTouch,eventStreamMetaData:{},gameUpdateModels:{},notificationContentViews:{main:"main",gameUpdates:"gameUpdates"},canLaunchGameFromGameUpdate:!1},notificationsName:e.notifications,notificationSourceType:o,signalRType:e.types,friendRequestReceivedLayout:a.friendRequestReceivedLayout,friendRequestAcceptedLayout:a.friendRequestAcceptedLayout,friendRequestActionType:a.friendRequestActionType,getAbsoluteUrl:function(e,t){return c.Endpoints?c.Endpoints.generateAbsoluteUrl(e,t,!0):getFormatString(e,t)},getFormatString:function(e,t){for(var i in t){var n=t[i],a=new RegExp("{"+i.toLowerCase()+"(:.*?)?\\??}");e=e.replace(a,n)}return e},isNotificationTypeValid:function(e){var t=!1;for(var i in o)if(o[i]===e){t=!0;break}return t},isCardClickable:function(e){switch(e.notificationSourceType){case o.friendRequestAccepted:return 1<e.eventCount||1===e.eventCount&&0===e.metadataCollection.length;case o.privateMessageReceived:case o.developerMetricsAvailable:return!0}return!1},normalizeUser:function(e,t){var i={userId:null,userName:null};switch(e){case o.friendRequestReceived:i.userId=t.SenderUserId,i.userName=t.SenderUserName;break;case o.friendRequestAccepted:i.userId=t.AccepterUserId,i.userName=t.AccepterUserName;break;case o.privateMessageReceived:i.userId=t.AuthorUserId,i.userName=t.AuthorUserName;break;case o.developerMetricsAvailable:case o.test:}return i},getUserHtmlTemplate:function(e,t){var i="";switch(e){case o.friendRequestAccepted:i=1<t?n.boldLink:n.userLink;break;case o.friendRequestReceived:default:i=n.userLink}return i},normalizeYouHaveText:function(e,t){switch(e){case o.friendRequestReceived:return a.newFriendRequests(t);case o.friendRequestAccepted:return a.newFriends(t)}return{}},normalizeSingleDisplayText:function(e,t){switch(e){case o.friendRequestReceived:return a.friendRequestSentSingle(t);case o.friendRequestAccepted:return a.friendRequestAcceptedSingle(t)}return{}},normalizeSingleConfirmedText:function(e,t){switch(e){case o.friendRequestReceived:return a.confirmSentSingle(t);case o.friendRequestAccepted:return a.confirmAcceptedSingle(t)}return{}},normalizeDoubleDisplayText:function(e,t,i){switch(e){case o.friendRequestReceived:return a.friendRequestSentDouble(t,i);case o.friendRequestAccepted:return a.friendRequestAcceptedDouble(t,i)}return{}},normalizeDoubleConfirmedText:function(e,t,i){switch(e){case o.friendRequestReceived:return a.confirmSentDouble(t,i);case o.friendRequestAccepted:return a.confirmAcceptedDouble(t,i)}return{}},normalizeMultipleDisplayText:function(e,t,i,n){switch(e){case o.friendRequestReceived:return a.friendRequestSentMultiple(t,i,n);case o.friendRequestAccepted:return a.friendRequestAcceptedMultiple(t,i,n)}return{}},normalizeMultipleConfirmedText:function(e,t,i,n){switch(e){case o.friendRequestReceived:return a.confirmSentMultiple(t,i,n);case o.friendRequestAccepted:return a.confirmAcceptedMultiple(t,i,n)}return{}},normalizeSelfMaxFriendsErrorText:function(){return a.tooManyFriendsSelf()},normalizeOtherMaxFriendsErrorText:function(){return a.tooManyFriendsOther()},buildScrollbar:function(e){s.default.element(e).mCustomScrollbar({autoHideScrollbar:!1,autoExpandScrollbar:!1,contentTouchScroll:1e4,documentTouchScroll:!1,mouseWheel:{preventDefault:!0},advanced:{autoScrollOnFocus:!1}})},isGameUpdateNotification:function(e){return e===o.gameUpdate},parseEpochMilliseconds:r,sortNotificationsByEventDate:function(t,a){if(!t)return null;var e=Object.keys(t).map(function(e){return t[e]});return e.sort(function(e,t){var i=r(e.eventDate)||0,n=r(t.eventDate)||0;return a?i-n:n-i}),e}}}o.$inject=["signalR","layoutLibraryService","$log"],n.default.factory("notificationStreamUtility",o),t.default=o},function(e,t,i){var n={"./directives/templates/developerMetricsAvailable.html":34,"./directives/templates/friendRequest.html":35,"./directives/templates/gameUpdateActionPopoverTemplate.html":36,"./directives/templates/gameUpdateTemplate.html":37,"./directives/templates/notificationContent.html":38,"./directives/templates/notificationContentViewTemplate.html":39,"./directives/templates/notificationStreamBase.html":40,"./directives/templates/privateMessage.html":41,"./directives/templates/test.html":42};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=33},function(e,t){e.exports='<div class="developer-metrics-notification-container"> <div class="notification-image-container"> <div class="card-plain" title="{{developerMetricsAvailableLayout.gameName}}"> <a class="text-name small font-caption-header" ng-href="{{developerMetricsAvailableLayout.gameLinkUrl}}"> <img ng-src="{{developerMetricsAvailableLayout.gameIconUrl}}" class="game-icon placeholder-asset-icon"/> </a> </div> </div> <div class="notification-item-content"> <div class="notification-data-container"> <span class="small text notification-display-text"> <div class="small text message-header" ng-bind-html="\'Message.DeveloperMetricsAvailable\' | translate:developerMetricsAvailableLayout"> </div> </span> <div class="text-secondary text-date-hint"> {{notification.eventDate | parseTimeStamp | date: "MMM d, yyyy | h:mm a"}} </div> </div> <div class="notification-action-container"> <button class="view-button btn-primary-xs see-all-link" ng-click="viewButtonHandler()" ng-bind="\'Action.View\' | translate"></button> </div> </div> </div>'},function(e,t){e.exports='<div> <div class="notification-item-front"> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm card-plain" ng-if="userIds.length >= 1" title="{{library.userLibrary[userIds[0]].name}}"> <a href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" click-in-card> <img ng-src="{{library.userLibrary[userIds[0]].thumbnail.Url}}" class="avatar-card-image" ng-class="{\'placeholder-avatar-headshot\':!library.userLibrary[userIds[0]].thumbnail.Url}" href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}"> </a> </div> <span class="icon-nav-group notification-image-placeholder" ng-if="!userIds || userIds.length == 0"></span> </div> <div class="notification-item-content"> <div class="notification-data-container font-caption-body"> <span class="small text notification-display-text" click-in-card ng-hide="notification.metadataCollection[0].IsAccepted" ng-bind-html="notificationDisplayText"></span> <span class="small text notification-display-text" click-in-card ng-show="notification.metadataCollection[0].IsAccepted" ng-bind-html="requestConfirmedText"></span> <div class="text-secondary font-caption-body">{{notification.eventDate | parseTimeStamp | date: "MMM d, yyyy | h:mm a"}}</div> </div> <div class="notification-action-container"> <button class="small btn-secondary-xs see-all-link font-caption-header" id="accept-fr-btn" ng-show="notification.friendRequestActionType === friendRequestActionType.acceptIgnoreBtns" ng-click="acceptFriend({friendRequestId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Accept\' | translate"></button> <button class="small btn-control-xs see-all-link font-caption-header" id="ignore-fr-btn" ng-show="notification.friendRequestActionType === friendRequestActionType.acceptIgnoreBtns" ng-click="ignoreFriend({friendRequestId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Ignore\' | translate"></button> <button class="small btn-secondary-xs roblox-popover-close see-all-link font-caption-header" id="chat-btn" ng-class="{\'btn-full-width\': library.isPhone}" ng-show="notification.friendRequestActionType === friendRequestActionType.chatBtn && !library.isChatDisabledByPrivacySetting" ng-click="chat({friendId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Chat\' | translate"></button> <a class="small btn-secondary-xs see-all-link font-caption-header" id="view-all-btn" ng-class="{\'btn-full-width\': library.isPhone }" ng-show="notification.friendRequestActionType === friendRequestActionType.viewAllBtn" click-in-card type="viewAllFriendRequests" ng-href="{{friendRequestLink}}" ng-bind="\'Action.ViewAll\' | translate"></a> </div> </div> </div> <div class="notification-item-back"> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm card-plain" ng-if="userIds.length >= 1" title="{{library.userLibrary[userIds[0]].name}}"> <span ng-href="{{library.userLibrary[userIds[0]].profileLink}}" href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" click-in-card> <img ng-src="{{library.userLibrary[userIds[0]].thumbnail.Url}}" ng-href="{{library.userLibrary[userIds[0]].profileLink}}" href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" class="avatar-card-image" ng-class="{\'placeholder-avatar-headshot\':!library.userLibrary[userIds[0]].thumbnail.Url}"> </span> </div> <span class="icon-nav-group notification-image-placeholder" ng-if="!userIds || userIds.length == 0"></span> </div> <div class="notification-item-content"> <div class="notification-data-container font-caption-body"> <span class="text notification-display-text" click-in-card ng-show="notification.metadataCollection[0].IsAccepted" ng-bind-html="requestConfirmedText"></span> <div class="text-secondary font-caption-body">{{notification.eventDate | parseTimeStamp | date: "MMM d, yyyy | h:mm a"}}</div> </div> <div class="notification-action-container" ng-show="notification.notificationSourceType == notificationSourceType.friendRequestReceived"> <button class="small btn-secondary-xs see-all-link font-caption-header" id="chat-btn" ng-class="{\'btn-full-width\': library.isPhone }" ng-show="notification.friendRequestActionType == friendRequestActionType.chatBtn && !library.isChatDisabledByPrivacySetting" ng-click="chat({friendId: userIds[0], notificationId: notification.id, event: $event})"> <span ng-bind="\'Action.Chat\' | translate"></span> </button> </div> </div> </div> </div>'},function(e,t){e.exports='<div> <ul class="dropdown-menu" role="menu"> <li> <a class="unfollow-link" ng-click="unfollowGame($event)"><span class="action-icon icon-follow-game-gray"></span><span ng-bind="\'Action.UnfollowGame\' | translate:{gameName: gameUpdateModel.truncatedGameName}"></span></a> </li> <li> <a class="report-abuse-link" ng-click="reportAbuse()"><span class="action-icon icon-report-darkgray"></span><span ng-bind="\'Action.ReportAbuse\' | translate"></span></a> </li> <li class="li-cancel-link"> <a class="cancel-link" ng-click="closeActionMenu()"><span class="action-icon icon-close"></span><span ng-bind="\'Action.Cancel\' | translate"></span></a> </li> </ul> </div>'},function(e,t){e.exports='<div class="game-update-notification-container" ng-class="{ \'active\':isActionMenuOpen }"> <div class="notification-image-container" ng-show="isAggregated || !gameUpdateModel.isUnfollowed"> <div class="card-plain" title="{{gameUpdateModel.gameName}}"> <a ng-click="goToGameDetails()"> <img ng-src="{{gameUpdateModel.gameIconUrl}}" class="game-icon placeholder-asset-icon"/> </a> </div> </div> <div class="notification-item-content" ng-show="!isAggregated && !gameUpdateModel.isUnfollowed"> <a class="more-link" uib-popover-template="actionMenuTemplate" popover-trigger="\'outsideClick\'" popover-placement="bottom-right" popover-is-open="isActionMenuOpen" popover-append-to-body="true" popover-class="game-update-action-menu" popover-animation="false"> <span class="icon-more-gray-vertical"></span> </a> <div class="notification-data-container" ng-class="{ \'single-game-update\': !isAggregated, \'play-button-visible\':library.canLaunchGameFromGameUpdate }"> <span class="small text notification-display-text"> <a class="text-name small font-caption-header" ng-click="goToGameDetails()"> {{gameUpdateModel.truncatedGameName}} </a> : {{gameUpdateModel.updateMessage}} </span> <span class="spinner spinner-sm" ng-if="!gameUpdateModel.updateMessage"></span> <div class="text-secondary text-date-hint"> {{gameUpdateModel.createdOn | date: "MMM d, yyyy | h:mm a"}} </div> <div class="font-caption-body not-playable-message" ng-if="library.canLaunchGameFromGameUpdate && gameUpdateModel.isPlayable === false"> <span ng-bind="\'Message.GameNotPlayableOnDevice\' | translate"></span> </div> <div class="notification-action-container" ng-if="library.canLaunchGameFromGameUpdate && gameUpdateModel.isPlayable"> <button class="small play-button btn-primary-xs see-all-link font-caption-header" ng-click="playButtonHandler()" ng-bind="\'Action.Play\' | translate"></button> </div> </div> </div> <div class="notification-item-content aggregated" ng-show="isAggregated" ng-click="viewGameUpdates()"> <div class="notification-data-container"> <span class="small text notification-display-text" ng-bind-html="aggregatedDisplayText"></span> <div class="text-secondary text-date-hint">{{gameUpdateModel.createdOn | date: "MMM d, yyyy | h:mm a"}}</div> <span class="icon-right"></span> </div> </div> <div ng-show="!isAggregated && gameUpdateModel.isUnfollowed"> <div class="unfollowed-game-update-notification small text" ng-class="{ \'play-button-visible\':library.canLaunchGameFromGameUpdate }"> <span ng-bind="\'Message.UnfollowedGame\' | translate:{gameName: gameUpdateModel.truncatedGameName}"></span><a class="undo-unfollow-link text-link small" ng-click="followGame()" ng-bind="\'Action.Undo\' | translate"></a> </div> </div> </div>'},function(e,t){e.exports=' <div class="notification-stream-content" id="notification-stream-content" ng-cloak> <div ng-controller="notificationsController" id="notification-stream-container" class="roblox-popover-container notification-stream-wrap" ng-class="{\'open\': layout.isNotificationContentOpen}"> <div class="arrow"></div> <div class="popover-container notification-stream-container"> <div notification-content-view library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.main}}" is-active="true"> <div class="notification-stream-header" ng-hide="library.isPhone || library.iniOSApp"> <span class="text-label small font-caption-header" ng-bind="\'Label.Notifications\' | translate"></span> <a class="text-link small font-caption-header" click-in-card type="goToSettingPage" ng-href="{{layout.settingLink}}" ng-bind="\'Label.Settings\' | translate"></a> </div> <div id="notification-stream-body" class="notification-stream-body" notification-stream-body ng-class="{\'notification-stream-body-height\' : layout.getRecentDataInitialized && notificationIds.length == 0 }"> <div class="small notification-stream-banner banner-new" ng-class="{\'on\': layout.isNotificationContentOpen && layout.bannerEnabled}"> <span class="banner-text" ng-click="reloadNotificationStreamData()">{{layout.bannerText}}</span> <span id="close" class="icon-close-white" ng-click="layout.bannerEnabled = false"></span> </div> <div class="small notification-stream-banner banner-error" ng-class="{\'on\': layout.isNotificationContentOpen && layout.errorBannerEnabled}"> <span class="banner-text">{{layout.errorText}}</span> <span id="close" class="icon-close-white" ng-click="layout.errorBannerEnabled = false"></span> </div> <div ng-show="layout.getRecentDataInitialized && notificationIds.length > 0" class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar" lazy-loading> <ul class="notification-stream-list"> <li ng-repeat="notification in notifications | sortNotificationsByEventDateDesc" notification-card class="border-bottom notification-stream-item" id="notification-stream-{{notification.id}}" ng-class="{\'unInteracted\': !notification.isInteracted,\'slide-out-left\': notification.isSlideOut,\'turn-off\': notification.isTurnOff,\'clickable\': notification.isClickable,\'game-update\': notification.notificationSourceType == notificationSourceType.gameUpdate }"> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestReceived" friend-request notification="notification" library="library" app-meta="appMeta" accept-friend="acceptFriend(friendRequestId, notificationId, event)" ignore-friend="ignoreFriend(friendRequestId, notificationId, event)" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" class="notification-item" ng-hide="notification.isTurnOff" ng-class="{\'flipped\': notification.isFlipped}"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestAccepted" friend-request notification="notification" library="library" app-meta="appMeta" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" ng-hide="notification.isTurnOff" class="notification-item" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.test" test notification="notification" interact-notification="interactNotification(notification)" class="notification-item"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.privateMessageReceived" private-message notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.developerMetricsAvailable" developer-metrics-available notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.gameUpdate" game-update notification="notification" library="library" content-view-manager="contentViewManager" app-meta="appMeta" class="notification-item" ng-hide="notification.isTurnOff" ng-click="null"> </div> <div class="small turn-off-container" ng-hide="!notification.isTurnOff"> <span class="turn-off-text">You have turned off notifications for</span> <a class="text-link small" ng-click="updateNotificationSetting(true)">Undo</a> </div> <span class="hidden icon-turn-off" ng-click="updateNotificationSetting(false)"></span> </li> </ul> <div class="notifications-lazy-loading" ng-show="layout.notiticationsLazyLoadingEnabled"> <span class="loading"></span> </div> </div> </div> <div class="notification-stream-loading" ng-hide="layout.getRecentDataInitialized"> <span class="loading"></span> </div> <div class="container-empty" ng-show="layout.getRecentDataInitialized && notificationIds.length === 0 "> <div class="notification-stream-empty"></div> <div><span class="text" ng-bind="\'Label.NoNotifications\' | translate"></span></div> </div> </div> </div> <div notification-content-view class="game-updates" library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.gameUpdates}}" is-active="false"> <div class="notification-stream-header"> <a class="back-icon icon-left" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)"></a> <span class="text-label small text game-updates-header" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)" ng-bind="\'Heading.BackToAllNotifications\' | translate"> </span> </div> <div id="notification-stream-body" class="notification-stream-body game-updates"> <div class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar"> <ul class="notification-stream-list"> <li ng-repeat="gameUpdateModel in library.gameUpdateModels | sortGameUpdates" class="border-bottom notification-stream-item unInteracted game-update"> <div game-update game-update-model="gameUpdateModel" library="library" app-meta="appMeta" class="notification-item" ng-click="null"> </div> </li> </ul> </div> </div> </div> </div> </div> </div> </div>'},function(e,t){e.exports='<div class="notification-content-view" ng-show="isActive" ng-transclude></div>'},function(e,t){e.exports='<div ng-controller="notificationStreamController" class="roblox-popover-content manual bottom" data-hidden-class-name="invisible" id="notification-stream-base" data-isNotificationContentOpen="{{layout.isNotificationContentOpen}}" ng-class="{\'inApp\': library.inApp,\'isPhone\': library.isPhone,\'invisible\': !library.inApp && !layout.isNotificationContentOpen}"> <div notification-content></div> </div>'},function(e,t){e.exports='<div> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm card-plain" ng-if="privateMessageLayout.displayUserId !== null" title="{{privateMessageLayout.displayUserName}}"> <a href="{{library.userLibrary[privateMessageLayout.displayUserId].profileLink}}" type="goToProfilePage" user_id="{{privateMessageLayout.displayUserId}}" click-in-card> <img ng-src="{{library.userLibrary[privateMessageLayout.displayUserId].thumbnail.Url}}" class="avatar-card-image" ng-class="{\'placeholder-avatar-headshot\':!library.userLibrary[privateMessageLayout.displayUserId].thumbnail.Url}" href="{{library.userLibrary[privateMessageLayout.displayUserId].profileLink}}" type="goToProfilePage" user_id="{{privateMessageLayout.displayUserId}}"> </a> </div> <span class="icon-nav-group" ng-if="privateMessageLayout.displayUserId === null"></span> </div> <div class="notification-item-content"> <div class="notification-data-container"> <span class="small text notification-display-text" ng-show="!privateMessageLayout.isStacked"> <div class="small text message-header" ng-bind-html="\'Message.MessageFrom\' | translate:{username: \'<span class=font-caption-header>\' + privateMessageLayout.displayUserName + \'</span>\'}"> </div> <div class="small text-secondary message-preview">{{privateMessageLayout.messagePreview}}</div> </span> <div class="small text notification-display-text" ng-show="privateMessageLayout.isStacked" ng-bind-html="\'Message.YouReceivedMessages\' | translate:{numberOfMessagesText: \'<span class=font-caption-header>\' + notification.eventCount + \'</span>\', numberOfMessages: notification.eventCount}"> </div> <div class="text-date-hint">{{notification.eventDate | parseTimeStamp | date: "MMM d, yyyy | h:mm a"}}</div> </div> </div> </div>'},function(e,t){e.exports='<div> <div class="notification-item-test"> <div class="notification-item-content"> <div class="notification-data-container"> <span class="text notification-display-text">{{notificationDisplayText}}</span> <div class="text-date-hint">{{notification.eventDate | parseTimeStamp | date: "MMM d, yyyy | h:mm a"}}</div> </div> </div> </div> </div>'},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=c(i(1)),a=i(4);i(44);var o=c(i(3)),r=c(i(0));function c(e){return e&&e.__esModule?e:{default:e}}(0,a.importFilesUnderPath)(i(45)),(0,a.importFilesUnderPath)(i(48));var s=i(50),l=(0,a.templateCacheGenerator)(n.default,"notificationStreamIconHtmlTemplate",s);n.default.element(function(){n.default.bootstrap("#notification-stream-icon-container",[o.default.name,l.name])}),(0,a.importFilesUnderPath)(i(5)),(0,a.importFilesUnderPath)(i(8)),(0,a.importFilesUnderPath)(i(11)),(0,a.importFilesUnderPath)(i(24)),(0,a.importFilesUnderPath)(i(27));var d=i(33),u=(0,a.templateCacheGenerator)(n.default,"notificationStreamHtmlTemplate",d);n.default.element(function(){n.default.bootstrap(".notification-stream-base",[r.default.name,u.name])}),t.default={notificationStreamIconModule:o.default,notificationStreamModule:r.default}},function(e,t,i){},function(e,t,i){var n={"./notificationIndicatorDirective.js":46,"./notificationStreamIconDirective.js":47};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=45},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(3),o=(n=a)&&n.__esModule?n:{default:n};function r(e,n,a){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationIndicatorTemplate,link:function(i,e,t){n.bind("Roblox.NotificationStream.UnreadNotifications",function(e,t){a.debug(" ----- notificationStreamIconController --- args.count --------"+t.count),i.$evalAsync(function(e){i.layout=i.layout||{},i.layout.unreadNotifications=e.count,i.layout.isNotificationContentOpen=e.isNotificationContentOpen}(t))})}}}r.$inject=["notificationStreamUtility","$document","$log"],o.default.directive("notificationIndicator",r),t.default=r},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(3),o=(n=a)&&n.__esModule?n:{default:n};function r(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamIconTemplate}}r.$inject=["notificationStreamUtility","$log"],o.default.directive("notificationStreamIcon",r),t.default=r},function(e,t,i){var n={"./abbreviateCountFilter.js":49};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=48},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,a=i(3);function o(){var n={100:"99+",1e3:"1K+"};return function(e,t,i){return t||(t=100),i||(i=n[t]),t<=e?i:e}}((n=a)&&n.__esModule?n:{default:n}).default.filter("abbreivateCount",o),t.default=o},function(e,t,i){var n={"./directives/templates/notificationIndicator.html":51,"./directives/templates/notificationStreamIcon.html":52};function a(e){var t=o(e);return i(t)}function o(e){if(i.o(n,e))return n[e];var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=50},function(e,t){e.exports='<a id="nav-ns-icon" class="roblox-popover rbx-menu-item notification-stream-icon" data-bind="notification-stream-base" data-container="notification-stream-container"> <span class="icon-nav-notification-stream" id="nav-notifications"></span> <span class="notification-red notification" ng-show="layout.unreadNotifications > 0 && (!layout.isNotificationContentOpen)"> {{layout.unreadNotifications | abbreivateCount}} </span> </a>'},function(e,t){e.exports='<div class="notification-stream" ng-class="{\'inApp\': library.inApp}"> <div notification-indicator></div> </div>'}]);

/* Bundle detector */
window.Roblox && window.Roblox.BundleDetector && window.Roblox.BundleDetector.bundleDetected("NotificationStream");