!function(){var i={965:function(e,t,i){var n={"./notificationIndicatorDirective.js":3723,"./notificationStreamIconDirective.js":332,"./notificationStreamIndicatorDirective.js":9935};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=965},6408:function(e,t,i){var n={"./abbreviateCountFilter.js":4991};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=6408},2594:function(e,t,i){var n={"./directives/templates/notificationIndicator.html":5198,"./directives/templates/notificationStreamIcon.html":3004,"./directives/templates/notificationStreamIndicator.html":3531};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=2594},8652:function(e,t,i){var n={"./gameUpdatesConstants.js":3793,"./signalR.js":330};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=8652},4903:function(e,t,i){var n={"./notificationStreamController.js":1042,"./notificationsController.js":8431};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=4903},3702:function(e,t,i){var n={"./clickInCardDirective.js":7141,"./developerMetricsAvailableDirective.js":2814,"./friendRequestDirective.js":9912,"./gameUpdateDirective.js":8331,"./groupMembershipDirective.js":5958,"./lazyLoadingDirective.js":8295,"./notificationCardDirective.js":1354,"./notificationContentDirective.js":3828,"./notificationContentViewDirective.js":2422,"./notificationStreamBaseDirective.js":1695,"./notificationStreamBaseViewDirective.js":1840,"./notificationStreamBodyDirective.js":6359,"./notificationStreamContainerDirective.js":1413,"./privateMessageDirective.js":1978,"./sendrMetaActionsListDirective.js":2799,"./sendrNotificationDirective.js":1226,"./testDirective.js":3587};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=3702},3748:function(e,t,i){var n={"./sortGameUpdatesFilter.js":7554,"./sortNotificationsByEventDateDesc.js":4779};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=3748},3545:function(e,t,i){var n={"./gameUpdatesService.js":4403,"./gameUpdatesUtility.js":158,"./layoutLibraryI18nService.js":5978,"./notificationStreamService.js":9822,"./notificationStreamUtility.js":167};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=3545},6012:function(e,t,i){var n={"./directives/templates/developerMetricsAvailable.html":177,"./directives/templates/friendRequest.html":6610,"./directives/templates/gameUpdateActionPopoverTemplate.html":4970,"./directives/templates/gameUpdateTemplate.html":5931,"./directives/templates/groupMembership.html":9177,"./directives/templates/notificationContentViewTemplate.html":6763,"./directives/templates/notificationStreamBaseView.html":643,"./directives/templates/notificationStreamContainer.html":5091,"./directives/templates/privateMessage.html":9488,"./directives/templates/test.html":5980};function a(e){e=o(e);return i(e)}function o(e){if(i.o(n,e))return n[e];e=new Error("Cannot find module '"+e+"'");throw e.code="MODULE_NOT_FOUND",e}a.keys=function(){return Object.keys(n)},a.resolve=o,(e.exports=a).id=6012},726:function(e){function o(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function r(e){return e.split("/").pop().replace(".html","")}var t={importFilesUnderPath:function(e){e.keys().forEach(e)},templateCacheGenerator:function(e,t,n,a){return e.module(t,[]).run(["$templateCache",function(i){n&&n.keys().forEach(function(e){var t=o(r(e));i.put(t,n(e))}),a&&a.keys().forEach(function(e){var t=o(r(e));i.put(t,a(e).replace(/<\/?script[^>]*>/gi,""))})}])}};e.exports=t},3723:function(e,t,i){"use strict";i.r(t);i=i(8923);function n(e,t,n){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationIndicatorTemplate,link:function(i){t.bind("Roblox.NotificationStream.UnreadNotifications",function(e,t){n.debug(" ----- notificationStreamIconController --- args.count --------"+t.count),i.$evalAsync((t=t,i.layout=i.layout||{},i.layout.unreadNotifications=t.count,void(i.layout.isNotificationContentOpen=t.isNotificationContentOpen)))})}}}n.$inject=["notificationStreamUtility","$document","$log"],i.Z.directive("notificationIndicator",n),t.default=n},332:function(e,t,i){"use strict";i.r(t);i=i(8923);function n(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamIconTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamIcon",n),t.default=n},9935:function(e,t,i){"use strict";i.r(t);i=i(8923);function n(e,t,a,o,r){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamIndicatorTemplate,link:function(i){function n(e){i.layout.unreadNotifications=e.count,i.layout.isNotificationContentOpen=e.isNotificationContentOpen}i.layout=i.layout||{},i.getUnreadNotificationCount=function(){o.unreadCount().then(function(e){e&&(0<(e=e.unreadNotifications)&&r.sendEventWithTarget(r.eventNames.notificationStream.openCTA,r.context.seen,{count:e,sendrVersion:0}),i.layout.unreadNotifications=e)},function(){a.debug("--- unreadCount call failed from notificationStreamIndicatorDirective----- ")}).catch(function(e){a.error(e)})},t.bind("Roblox.NotificationStream.UnreadNotifications",function(e,t){a.debug(" ----- notificationStreamIconController --- args.count --------".concat(t.count)),i.$evalAsync(n(t))}),t.bind("Roblox.NotificationStream.ClearUnreadNotifications",function(){0<i.layout.unreadNotifications&&(n({count:0,isNotificationContentOpen:!0}),o.clearUnread().then(function(){i.layout.unreadNotifications=0}))}),i.layout&&i.layout.isNotificationContentOpen||i.getUnreadNotificationCount()}}}n.$inject=["notificationStreamUtility","$document","$log","notificationStreamService","eventStreamService"],i.Z.directive("notificationStreamIndicator",n),t.default=n},4991:function(e,t,i){"use strict";function n(){var n={100:"99+",1e3:"1K+"};return function(e,t,i){return t=t||100,i=i||n[t],t<=e?i:e}}i.r(t),i(8923).Z.filter("abbreivateCount",n),t.default=n},8923:function(e,t,i){"use strict";var n=i(5734),n=i.n(n)().module("notificationStreamIcon",["robloxApp","notificationStream","notificationStreamIconHtmlTemplate"]);t.Z=n},3793:function(e,t,i){"use strict";i.r(t);var n=i(792),a={endpoints:{getInteractedEndpoint:function(){return{url:"".concat(n.EnvironmentUrls.notificationApi,"/v2/stream-notifications/game-update-notification-interacted"),retryable:!1,withCredentials:!0}},getReadEndpoint:function(){return{url:"".concat(n.EnvironmentUrls.notificationApi,"/v2/stream-notifications/game-update-notification-read"),retryable:!1,withCredentials:!0}},getGameFollowingsEndpoint:function(e){return{url:"".concat(n.EnvironmentUrls.followingsApi,"/v1/users/").concat(e,"/universes"),retryable:!0,withCredentials:!0}},getFollowGameEndpoint:function(e,t){return{url:"".concat(n.EnvironmentUrls.followingsApi,"/v1/users/").concat(e,"/universes/").concat(t),retryable:!1,withCredentials:!0}},getGameDetailsEndpoint:function(){return{url:"".concat(n.EnvironmentUrls.gamesApi,"/v1/games/multiget-place-details"),retryable:!0,withCredentials:!0}},getGameUpdatesEndpoint:function(){return{url:"".concat(n.EnvironmentUrls.notificationApi,"/v2/stream-notifications/get-latest-game-updates"),retryable:!0,withCredentials:!0}},getAbuseReportUrl:function(e,t,i){return"".concat(n.EnvironmentUrls.websiteUrl,"/abusereport/gameupdate?id=").concat(e,"&redirectUrl=").concat(i)}},apiParams:{gameUpdateBatchSize:100,placeDetailBatchSize:100},gameNameMaxLength:30,gameUpdateInteractions:{played:"Played",seen:"Seen",unfollowed:"Unfollowed"}};i(8119).Z.constant("gameUpdatesConstants",a),t.default=a},330:function(e,t,i){"use strict";i.r(t);var n={notifications:{NotificationStream:"NotificationStream",ChatPrivacySettingNotifications:"ChatPrivacySettingNotifications"},types:{NewNotification:"NewNotification",NotificationsRead:"NotificationsRead",NotificationMarkedInteracted:"NotificationMarkedInteracted",NotificationRevoked:"NotificationRevoked",chatEnabled:"ChatEnabled",chatDisabled:"ChatDisabled"}};i(8119).Z.constant("signalR",n),t.default=n},1042:function(e,t,i){"use strict";i.r(t);var d=i(792),n=i(5734),f=i.n(n),i=i(8119);function a(a,n,e,i,o,r,c,s,l,u){a.buildNotificationsList=function(e){var n=[];e.forEach(function(e){var t=e.metadataCollection,i=e.notificationSourceType;o.isNotificationTypeValid(i)&&(o.isGameUpdateNotification(i)||o.isReactNotification(i)||t.forEach(function(e){var t=o.normalizeUser(i,e);if(t&&null!=t.userId&&null!=t.userName){e=t.userId,t=t.userName;if(-1<a.library.userIdList.indexOf(e))return!1;n.push(e),a.library.userIdList.push(e),a.library.userLibrary[e]={id:e,name:t,profileLink:o.getAbsoluteUrl(o.links.profileLink,{id:e})}}}),e.isClickable=o.isCardClickable(e),a.notificationIds.indexOf(e.id)<0&&a.notificationIds.push(e.id),a.notifications[e.id]=e)}),a.layout.emptyNotificationEnabled=0===a.notificationIds.length},a.buildGameUpdateNotifications=function(i){var n;i&&0!==i.length&&(n=a.library.gameUpdateModels,c.getGameFollowingsForUserAsync(a.library.currentUserId).then(function(e){for(var t=[],i=0;i<e.length;i++)t.push(e[i].universeId);return s.getGameUpdatesAsync(t,n)}).then(function(e){var t=s.aggregateGameUpdateNotifications(i,n);t&&(a.notifications[t.id]=t,a.notificationIds.unshift(t.id),s.fillGameDetails(n),1===t.metadataCollection.length&&(t=n[t.metadataCollection[0].UniverseId],c.markGameUpdateInteractedAsync(t.universeId,t.createdOnKey,l.gameUpdateInteractions.seen,a.library.currentUserId)))}))},a.getRecentNotifications=function(){a.layout.getRecentDataInitialized=!1,i.getRecentNotifications(a.notificationApiParams.startIndexOfNotifications,a.notificationApiParams.pageSizeOfNotifications).then(function(e){var t=[],i=[];a.layout.getRecentDataInitialized=!0,a.layout.isGetRecentDataLoadedRequested=!1,e&&0<e.length&&(f().forEach(e,function(e){(o.isGameUpdateNotification(e.notificationSourceType)?t:i).push(e)}),a.buildNotificationsList(i),0<t.length&&a.buildGameUpdateNotifications(t),a.layout.isLazyLoadingRequested=!0,e.length===a.notificationApiParams.pageSizeOfNotifications&&(a.notificationApiParams.startIndexOfNotifications=a.notificationApiParams.startIndexOfNotifications+a.notificationApiParams.pageSizeOfNotifications,a.notificationApiParams.loadMoreNotifications=!0))},function(){u.debug("--- getRecentNotifications call failed ----- "),a.layout.getRecentDataInitialized=!0})},a.setNotificationContentOpen=function(e){(a.layout.isNotificationContentOpen=e)||(window.removeEventListener("Roblox.NotificationStream.StreamClosed",a.handleStreamClosed),(e=d.RealTime.Factory.GetClient()).Unsubscribe(o.notificationsName.NotificationStream,a.handleNotificationStreamNotification),e.Unsubscribe(o.notificationsName.ChatPrivacySettingNotifications,a.handleChatPrivacySettingNotification))},a.clearUnreadNotifications=function(){0<a.library.unreadNotifications&&(a.library.unreadNotifications=0,n.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:0,isNotificationContentOpen:a.layout.isNotificationContentOpen}))},a.openNotificationStream=function(){a.layout.isGetRecentDataLoadedRequested&&(a.resetNotificationStreamData(),a.getRecentNotifications()),n.triggerHandler("Roblox.NotificationStream.ClearUnreadNotifications",{}),a.clearUnreadNotifications()},a.toggleNotificationContent=function(e){e?a.setNotificationContentOpen(!1):(a.library.inApp||a.setNotificationContentOpen(!a.layout.isNotificationContentOpen),a.layout.isNotificationContentOpen&&a.layout.isGetRecentDataLoadedRequested&&a.openNotificationStream()),a.layout.isNotificationContentOpen&&a.layout.bannerEnabled&&(a.layout.bannerEnabled=!1),a.layout.isLazyLoadingRequested&&(a.layout.isLazyLoadingRequested=!1)},a.getUnreadNotificationCount=function(){i.unreadCount().then(function(e){var t,i;e&&(a.library.unreadNotifications=e.unreadNotifications,t=e.unreadNotifications,(i=a.layout.isNotificationContentOpen)?a.layout.bannerText=o.textTemplate.newNotification(a.library.unreadNotifications):n.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:e.unreadNotifications,isNotificationContentOpen:i}),a.layout.unreadNotifications!==t&&0<t&&(i=i?r.eventNames.notificationStream.refreshCTA:r.eventNames.notificationStream.openCTA,r.sendEventWithTarget(i,r.context.seen,{count:t,sendrVersion:0})))},function(){u.debug("--- unreadCount call failed ----- ")})},a.resetNotificationStreamData=function(){a.notificationIds=[],a.notifications={},a.notificationApiParams&&(a.notificationApiParams.startIndexOfNotifications=0)},a.reloadNotificationStreamData=function(){a.resetNotificationStreamData(),n.triggerHandler("Roblox.NotificationStream.ClearUnreadNotifications",{}),a.getRecentNotifications(),a.layout.bannerEnabled=!1},a.updateNewNotificationInfo=function(){a.layout.isGetRecentDataLoadedRequested=!0,a.getUnreadNotificationCount(),a.$evalAsync(function(){a.layout.isNotificationContentOpen&&(a.layout.bannerEnabled=!0)})},a.updateSettingsInLibrary=function(e){a.library.bannerDismissTimeSpan=e.bannerDismissTimeSpan,a.library.signalRDisconnectionResponseInMilliseconds=e.signalRDisconnectionResponseInMilliseconds,a.library.eventStreamMetaData={userId:a.library.currentUserId,inApp:a.library.inApp},a.library.canLaunchGameFromGameUpdate=e.canLaunchGameFromGameUpdate},a.handleSignalRSuccess=function(){a.$evalAsync(function(){a.layout.errorBannerEnabled=!1})},a.handleSignalRError=function(){e(function(){a.layout.errorBannerEnabled=!0,a.layout.errorText=o.textTemplate.noNetworkConnectionText()},a.library.signalRDisconnectionResponseInMilliseconds)},a.handleNotificationStreamNotification=function(e){switch(u.debug("--------- this is NotificationStream subscription -----------".concat(e.Type)),e.Type){case o.signalRType.NewNotification:a.updateNewNotificationInfo();break;case o.signalRType.NotificationsRead:a.clearUnreadNotifications();break;case o.signalRType.NotificationRevoked:a.getUnreadNotificationCount(),a.layout.isStreamBodyInteracted||a.reloadNotificationStreamData()}},a.handleChatPrivacySettingNotification=function(t){u.debug("--------- this is ChatPrivacySettingNotifications subscription -----------".concat(t.Type));try{switch(t.Type){case o.signalRType.chatEnabled:a.library.isChatDisabledByPrivacySetting=!1;break;case o.signalRType.chatDisabled:a.library.isChatDisabledByPrivacySetting=!0}}catch(e){var i="ChatPrivacySettingNotifications:".concat(t.Type,": ");e&&e.message&&(i+=e.message),u.debug(i)}},a.getChatPrivacySetting=function(){i.getChatPrivacySettings().then(function(e){a.library.isChatDisabledByPrivacySetting=e&&!e.chatEnabled},function(e){u.debug(e)})},a.closeErrorBanner=function(){a.layout.errorBannerEnabled=!1,a.layout.errorText=""},a.closeBanner=function(){a.layout.bannerEnabled=!1,a.layout.bannerText=""},a.getNotificationListItemClass=function(e){return o.isReactNotification(e.notificationSourceType)?"react-notification-wrapper":{"border-bottom notification-stream-item":!0,unInteracted:!e.isInteracted,"slide-out-left":e.isSlideOut,"turn-off":e.isTurnOff,clickable:e.isClickable,"game-update":o.isGameUpdateNotification(e.notificationSourceType)}},a.initializeRealTimeSubscriptions=function(){var e;f().isDefined(d.RealTime)&&((e=d.RealTime.Factory.GetClient()).SubscribeToConnectionEvents(a.handleSignalRSuccess,a.handleSignalRSuccess,a.handleSignalRError,o.notificationsName.NotificationStream),e.Subscribe(o.notificationsName.NotificationStream,a.handleNotificationStreamNotification),e.Subscribe(o.notificationsName.ChatPrivacySettingNotifications,a.handleChatPrivacySettingNotification))},a.getUnreadNotificationCountFromDom=function(){var e=f().element(".notification-stream-icon .notification-red");e&&!Number.isNaN(e)&&(a.library.unreadNotifications=parseInt(e.html(),10))},a.handleStreamClosed=function(){a.setNotificationContentOpen(!1)},a.initializeNotificationStream=function(){var e;!function(){try{a.library=a.library||o.library,a.resetNotificationStreamData(),a.getChatPrivacySetting(),i.initialize().then(function(e){e&&(o.layout.pageDataInitialized=!0,a.updateSettingsInLibrary(e))},function(){u.debug("----- initialize data request failed ----")})}catch(e){var t="initializePageData:";e&&e.message&&(t+=e.message),u.debug(t)}}(),a.layout=f().copy(o.layout),a.notificationApiParams=f().copy(o.notificationApiParams),a.library.inApp?(a.getUnreadNotificationCount(),a.setNotificationContentOpen(!0)):a.getUnreadNotificationCountFromDom(),a.layout.isNotificationContentOpen||((e=f().copy(a.library.eventStreamMetaData)).countOfUnreadNotification=a.library.unreadNotifications,e.sendrVersion=0,r.sendEventWithTarget(r.eventNames.notificationStream.openContent,"click",e)),a.toggleNotificationContent(),a.initializeRealTimeSubscriptions(),window.addEventListener("Roblox.NotificationStream.StreamClosed",a.handleStreamClosed)},a.initializeNotificationStream()}a.$inject=["$scope","$document","$timeout","notificationStreamService","notificationStreamUtility","eventStreamService","gameUpdatesService","gameUpdatesUtility","gameUpdatesConstants","$log"],i.Z.controller("notificationStreamController",a),t.default=a},8431:function(e,t,i){"use strict";i.r(t);var n=i(5734),m=i.n(n),i=i(8119);function o(t,e){var i,n=Object.keys(t);return Object.getOwnPropertySymbols&&(i=Object.getOwnPropertySymbols(t),e&&(i=i.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,i)),n}function g(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach(function(e){var t,i;t=n,e=a[i=e],i in t?Object.defineProperty(t,i,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[i]=e}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))})}return n}function a(r,a,o,c,s,l,u,n,d){function f(e,t,i,n){var a=3<arguments.length&&void 0!==n?n:{},o=r.notifications[t],n=m().copy(r.library.eventStreamMetaData);n.notificationId=t,n.sendrVersion=0,o&&(n.notificationType=o.notificationSourceType);a=g(g({},n),a);s.sendEventWithTarget(e,i,a)}var p;r.parseErrorFromApiResponse=function(e){return e&&e.errors&&e.errors[0]},r.acceptFriend=function(e,t,i){d.debug("---------------- acceptFriend --------- ");var n=r.notifications[t];r.interactNotification(n),a.acceptFriendV2(e).then(function(e){r.onAcceptFriendSuccess(t,i)},function(e){e=r.parseErrorFromApiResponse(e);e&&e.userFacingMessage&&(r.layout.errorText=e.userFacingMessage,r.layout.errorBannerEnabled=!0)})},r.onAcceptFriendSuccess=function(e,t){var i=r.notifications[e];i.friendRequestActionType=o.friendRequestActionType.chatBtn,i.metadataCollection[0].IsAccepted=!0,i.isFlipped=!0,n.triggerHandler("Roblox.Friends.CountChanged"),f(s.eventNames.notificationStream.acceptFriendRequest,e,t.type)},r.ignoreFriend=function(e,t,i){d.debug("---------------- ignoreFriend --------- ");var n=r.notifications[t];r.interactNotification(n),a.ignoreFriendV2(e).then(function(e){r.onIgnoreFriend(t,i)},function(e){r.onIgnoreFriend(t,i)})},r.onIgnoreFriend=function(e,t){r.notifications[e].isSlideOut=!0,f(s.eventNames.notificationStream.ignoreFriendRequest,e,t.type)},r.removeNotification=function(e){d.debug("---------------- removeNotification --------- notificationId:  ".concat(e));var t=r.notificationIds.indexOf(e);r.notificationIds.splice(t,1),delete r.notifications[e]},r.chat=function(e,t,i){var n;r.library.isChatDisabledByPrivacySetting||(n=r.notifications[t],r.interactNotification(n),(n=u.buildPermissionVerifier(r.library)).uwpApp.hybridRequired=!0,u.startChat(e,n),f(s.eventNames.notificationStream.chat,t,i.type))},r.interactNotification=function(e){e.isInteracted||a.markInteracted(e.id).then(function(){e.isInteracted=!0})},r.clickCard=function(e){var t,i,n="",a={};switch(e.notificationSourceType){case o.notificationSourceType.friendRequestReceived:r.interactNotification(e),1<e.eventCount||0===e.metadataCollection.length?(n=o.links.friendRequestLink,r.library.inApp?(a={feature:o.links.friendRequestTabName,urlPath:n},c.navigateToFeature(a,function(e){d.debug("openUserFriendsPage ---- status:".concat(e))})):window.location.href=l.getAbsoluteUrl(n)):e.metadataCollection&&0<e.metadataCollection.length&&(i=e.metadataCollection[0],n=o.links.profileLink,t=i.SenderUserId,r.library.inApp?c.openUserProfile(parseInt(t),function(e){d.debug("openUserProfile ---- status:".concat(e))}):window.location.href=o.getAbsoluteUrl(n,{id:t}));break;case o.notificationSourceType.friendRequestAccepted:r.interactNotification(e),n=o.links.friendsLink,r.library.inApp?(a={feature:o.links.friendsTabName,urlPath:n},c.navigateToFeature(a,function(e){d.debug("openUserFriendsPage ---- status:".concat(e))})):window.location.href=l.getAbsoluteUrl(n);break;case o.notificationSourceType.privateMessageReceived:r.interactNotification(e),1<e.eventCount||0===e.metadataCollection.length?n=o.links.inboxLink:e.metadataCollection&&0<e.metadataCollection.length&&(i=e.metadataCollection[0],n=o.links.inboxLink+o.links.inboxMessageDetailQuery+i.MessageId),f(s.eventNames.notificationStream.goToMessages,e.id,e.notificationSourceType,{targetUrl:n}),r.library.inApp?(a={feature:o.links.inboxTabName,urlPath:n},c.navigateToFeature(a,function(e){d.debug("openUserProfile ---- status:".concat(e))})):window.location.href=l.getAbsoluteUrl(n);break;case o.notificationSourceType.developerMetricsAvailable:r.interactNotification(e);break;case o.notificationSourceType.groupJoinRequestAccepted:r.interactNotification(e),0===e.metadataCollection.length?(n=o.links.myGroupsLink,f(s.eventNames.notificationStream.goToGroupPage,e.id,e.notificationSourceType,{groupId:0}),r.library.inApp?(a={feature:o.links.groupsTabName,urlPath:n},c.navigateToFeature(a,function(e){d.debug("openGroupDetails ---- status:".concat(e))})):window.location.href=l.getAbsoluteUrl(n)):e.metadataCollection&&0<e.metadataCollection.length&&(i=e.metadataCollection[0],n=o.links.groupLink,i=i.AccepterGroupId,a={feature:o.links.groupsTabName,urlPath:n},f(s.eventNames.notificationStream.goToGroupPage,e.id,e.notificationSourceType,{groupId:i}),r.library.inApp?c.navigateToFeature(a,function(e){d.debug("openGroupDetails ---- status:".concat(e))}):window.location.href=o.getAbsoluteUrl(n,{id:i}))}},r.notificationSourceType=o.notificationSourceType,r.contentViewManager=(p={},{addContentView:function(e){p[e.viewId]=e},selectContentView:function(e){var t=null!==(i=this.getCurrentContentViewId)&&void 0!==i?i:"",i=p[e];i&&(m().forEach(p,function(e){e.isActive=!1}),i.isActive=!0,""!==t&&t!==e&&s.sendEventWithTarget(s.eventNames.notificationStream.pageChanged,s.context.click,{targetPage:e,sendrVersion:0}))},getCurrentContentViewId:function(){var i="";return m().forEach(p,function(e,t){e.isActive&&(i=t)}),i}}),n.bind("Roblox.Popover.Status",function(e,t){d.debug("notificationsController"),t.isOpen||r.contentViewManager.selectContentView(r.library.notificationContentViews.main)})}a.$inject=["$scope","notificationStreamService","notificationStreamUtility","hybridService","eventStreamService","urlService","chatDispatchService","$document","$log"],i.Z.controller("notificationsController",a),t.default=a},7141:function(e,t,i){"use strict";i.r(t);var n=i(5734),g=i.n(n),i=i(8119);function a(u,d,f,p,m){return{restrict:"A",scope:!0,link:function(s,l){l.bind("click",function(e){if(!e.target)return!1;var t=g().element(e.target),i=t.attr("type"),n=g().copy(s.library.eventStreamMetaData);n.sendrVersion=0;var a,o=l.attr("type"),o=u.eventNames.notificationStream[o];if(null!==o&&s.notification&&(n.notificationType=s.notification.notificationSourceType,n.notificationId=s.notification.id,u.sendEventWithTarget(o,u.context.click,n)),e.target&&i&&(s.notification&&(n.notificationType=s.notification.notificationSourceType,s.interactNotification(s.notification)),o=u.eventNames.notificationStream[i],u.sendEventWithTarget(o,e.type,n),s.library.inApp)){switch(e.stopPropagation(),e.preventDefault(),i){case f.links.settingLinkName:var r={feature:f.links.settingTabName,urlPath:f.links.settingLink};d.navigateToFeature(r,function(e){p.debug("navigateToFeature ---- status:".concat(e))});break;case f.links.friendRequestLinkName:r={feature:f.links.friendRequestTabName,urlPath:f.links.friendRequestLink};d.navigateToFeature(r,function(e){p.debug("openUserProfile ---- status:".concat(e))});break;case f.links.profileLinkName:var c=t.attr("href")&&t.attr("href").match(/users\/(\d+)/,"")?t.attr("href").match(/users\/(\d+)/,"")[1]:s.userIds[0];d.openUserProfile(parseInt(c),function(e){p.debug("openUserProfile ---- status:".concat(e))});break;case f.links.groupLinkName:a=t.attr("href")&&t.attr("href").match(/groups\/(\d+)/,"")?(a=t.attr("href").match(/groups\/(\d+)/,"")[1],m("formatString")(f.links.groupLink,{id:a})):f.links.myGroupsLink,r={feature:f.links.groupsTabName,urlPath:a},d.navigateToFeature(r,function(e){p.debug("openGroupDetails ---- status:".concat(e))})}return!1}})}}}a.$inject=["eventStreamService","hybridService","notificationStreamUtility","$log","$filter"],i.Z.directive("clickInCard",a),t.default=a},2814:function(e,t,i){"use strict";i.r(t);var c=i(792),i=i(8119);function n(n,a,o,r){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:a.templates.developerMetricsAvailableTemplate,link:function(i){!function(){i.notificationSourceType=a.notificationSourceType,i.developerMetricsAvailableLayout={month:"",year:"",universeId:-1,gameName:"",gameNameLinked:"",rootPlaceId:-1,gameLinkUrl:null,gameIconUrl:null};var e,t=i.notification.metadataCollection;t&&0<t.length&&(e=t[0],t=o.getAbsoluteUrl("/places/".concat(e.rootPlaceId,"/stats")),i.developerMetricsAvailableLayout.month=function(e){for(var t=(new c.Intl).getMonthsList("long"),i=0,n=t.length;i<n;i++)if(t[i].value===e)return t[i].name;return""}(e.month),i.developerMetricsAvailableLayout.year=e.year,i.developerMetricsAvailableLayout.universeId=e.universeId,i.developerMetricsAvailableLayout.gameName=e.gameName,i.developerMetricsAvailableLayout.gameNameLinked='<a class="text-name font-caption-header" href="'.concat(t,'">').concat(e.gameName,"</a>"),i.developerMetricsAvailableLayout.rootPlaceId=e.rootPlaceId,i.developerMetricsAvailableLayout.gameLinkUrl=t,i.developerMetricsAvailableLayout.notificationId=i.notification.id,i.viewButtonHandler=function(){n.location.href=i.developerMetricsAvailableLayout.gameLinkUrl;var e=r.eventNames.notificationStream.viewDeveloperMetrics,t={notificationId:i.developerMetricsAvailableLayout.notificationId,notificationType:a.notificationSourceType.developerMetricsAvailable,universeId:i.developerMetricsAvailableLayout.universeId,sendrVersion:0};r.sendEventWithTarget(e,r.context.click,t)})}()}}}n.$inject=["$window","notificationStreamUtility","urlService","eventStreamService"],i.Z.directive("developerMetricsAvailable",n),t.default=n},9912:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(d,e,n){return{restrict:"A",replace:!0,scope:{notification:"=",library:"=",appMeta:"=",acceptFriend:"&",ignoreFriend:"&",chat:"&",interactNotification:"&"},templateUrl:d.templates.friendRequestTemplate,link:function(r){var e,t=r.notification.metadataCollection,c=r.notification.notificationSourceType,i=t.length,s=r.notification.eventCount||i,l="",u="";r.notificationSourceType=d.notificationSourceType,r.friendRequestLink=d.layout.friendRequestLink,r.thumbnailTypes=n.thumbnailTypes,r.userIds=[],r.notificationDisplayText="",t.forEach(function(e,t){var i=d.normalizeUser(c,e),n=i.userId,a=i.userName,o=i.displayName,e=r.library.userLibrary[n]&&r.library.userLibrary[n].profileLink?r.library.userLibrary[n].profileLink:d.getAbsoluteUrl(d.links.profileLink,{id:n});r.userIds.indexOf(n)<0&&r.userIds.push(n);i=d.getUserHtmlTemplate(c,s),e=d.getFormatString(i,{userId:n,userName:a,displayName:o,profileLink:e});t<1?l+=e:t<2&&(u+=e)}),0===i?r.notificationDisplayText=d.normalizeYouHaveText(c,s):2<s||i<s?(e=2<i?s-2:s-i,r.notificationDisplayText=d.normalizeMultipleDisplayText(c,l,u,e),r.requestConfirmedText=d.normalizeMultipleConfirmedText(c,l,u,e)):2===s?(r.notificationDisplayText=d.normalizeDoubleDisplayText(c,l,u),r.requestConfirmedText=d.normalizeDoubleConfirmedText(c,l,u)):(r.notificationDisplayText=d.normalizeSingleDisplayText(c,l),r.requestConfirmedText=d.normalizeSingleConfirmedText(c,l)),r.friendRequestActionType=d.friendRequestActionType,r.notification.notificationSourceType===d.notificationSourceType.friendRequestReceived?1!==i||1!==s||t[0].IsAccepted?1===i&&1===s&&t[0].IsAccepted?r.notification.friendRequestActionType=d.friendRequestActionType.chatBtn:r.notification.friendRequestActionType=d.friendRequestActionType.viewAllBtn:r.notification.friendRequestActionType=t[0].IsAccepted?d.friendRequestActionType.chatBtn:d.friendRequestActionType.acceptIgnoreBtns:r.notification.notificationSourceType===d.notificationSourceType.friendRequestAccepted&&1===i&&1===s&&(r.notification.friendRequestActionType=d.friendRequestActionType.chatBtn)}}}n.$inject=["notificationStreamUtility","$log","thumbnailConstants"],i.Z.directive("friendRequest",n),t.default=n},8331:function(e,t,i){"use strict";i.r(t);var p=i(792),n=i(5734),m=i.n(n),i=i(8119);function a(o,r,c,e,s,l,t,u,d){var f=e.gameUpdateInteractions;return{restrict:"A",replace:!0,templateUrl:s.templates.gameUpdateTemplate,scope:{library:"=",appMeta:"=",contentViewManager:"=",notification:"=?",gameUpdateModel:"=?"},link:function(i,e){var t,n=$(e);if(!i.gameUpdateModel){if(!i.notification)return;if((t=i.notification.metadataCollection)&&0<t.length&&(i.gameUpdateModel=i.library.gameUpdateModels[t[0].UniverseId]),!i.gameUpdateModel)return}var a="".concat(i.gameUpdateModel.rootPlaceId,"-").concat(i.gameUpdateModel.createdOn);i.notificationSourceType=s.notificationSourceType,i.thumbnailTypes=u.thumbnailTypes,t&&1<t.length&&(i.isAggregated=!0,i.aggregatedDisplayText=c.formatAggregatedDisplayText(t[0].GameName,t[1].GameName,i.notification.eventCount-2)),i.gameNameMaxLength=c.gameNameMaxLength,i.actionMenuTemplate="game-update-action-popover-template",i.isActionMenuOpen=!1,i.getEventExtraParams=function(){var e;return{notifId:a,notifType:"gameUpdate",pid:i.gameUpdateModel.rootPlaceId,sourceId:i.gameUpdateModel.universeId,isAggregate:null!==(e=i.isAggregated)&&void 0!==e&&e,nsPage:i.contentViewManager.getCurrentContentViewId(),sendrVersion:0}},i.$watch("isActionMenuOpen",function(e,t){e&&!t?d.sendEventWithTarget(d.eventNames.notificationStream.openMetaActions,d.context.click,i.getEventExtraParams()):t&&!e&&d.sendEventWithTarget(d.eventNames.notificationStream.closeMetaActions,d.context.click,i.getEventExtraParams())}),i.goToGameDetails=function(){d.sendEventWithTarget(d.eventNames.notificationStream.goToGameDetails,d.context.click,i.getEventExtraParams()),i.library.inApp?l.navigateToFeature({feature:"GameDetails",urlPath:i.gameUpdateModel.gameLinkUrlForApp}):o.location.href=i.gameUpdateModel.gameLinkUrl},i.playButtonHandler=function(){r.markGameUpdateInteractedAsync(i.gameUpdateModel.universeId,i.gameUpdateModel.createdOnKey,f.played,i.library.currentUserId),i.library.inApp?l.launchGame({placeId:i.gameUpdateModel.rootPlaceId,requestType:"RequestGame",isPartyLeader:!1}):p.GameLauncher.joinMultiplayerGame(i.gameUpdateModel.rootPlaceId,!0,!1),d.sendEventWithTarget(d.eventNames.notificationStream.launchGame,d.context.click,i.getEventExtraParams())},i.viewGameUpdates=function(){i.contentViewManager.selectContentView(i.library.notificationContentViews.gameUpdates),m().forEach(i.library.gameUpdateModels,function(e){e.seen||r.markGameUpdateInteractedAsync(e.universeId,e.createdOnKey,f.seen,i.library.currentUserId).then(function(){e.seen=!0},function(){})})},i.followGame=function(){d.sendEventWithTarget(d.eventNames.notificationStream.follow,d.context.click,i.getEventExtraParams()),r.followGameAsync(i.library.currentUserId,i.gameUpdateModel.universeId).then(function(){n.focus(),i.gameUpdateModel.isUnfollowed=!1,i.gameUpdateModel.updateMessage||c.getGameUpdatesAsync([i.gameUpdateModel.universeId],i.library.gameUpdateModels,null)},function(){})},i.unfollowGame=function(e){e&&e.stopPropagation&&e.stopPropagation(),d.sendEventWithTarget(d.eventNames.notificationStream.unfollow,d.context.click,i.getEventExtraParams()),r.unfollowGameAsync(i.library.currentUserId,i.gameUpdateModel.universeId).then(function(){n.focus(),i.gameUpdateModel.isUnfollowed=!0,i.isActionMenuOpen=!1,r.markGameUpdateInteractedAsync(i.gameUpdateModel.universeId,i.gameUpdateModel.createdOnKey,f.unfollowed,i.library.currentUserId)},function(){})},i.reportAbuse=function(){r.reportAbuse(i.gameUpdateModel.universeId,new Date(i.gameUpdateModel.createdOn)),d.sendEventWithTarget(d.eventNames.notificationStream.report,d.context.click,i.getEventExtraParams())},i.closeActionMenu=function(){i.isActionMenuOpen=!1}}}}a.$inject=["$window","gameUpdatesService","gameUpdatesUtility","gameUpdatesConstants","notificationStreamUtility","hybridService","$log","thumbnailConstants","eventStreamService"],i.Z.directive("gameUpdate",a),t.default=a},5958:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(s,e,l,u){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:s.templates.groupMembershipTemplate,link:function(o){var e,t=o.notification.metadataCollection,i=o.notification.notificationSourceType,n=t.length,a=o.notification.eventCount||n,r="",c="";o.thumbnailTypes=l.thumbnailTypes,o.groupMembershipLayout={},o.notificationDisplayText="",t.forEach(function(e,t){var i=e.AccepterGroupId,n=e.AccepterGroupName,a=s.getAbsoluteUrl(s.layout.groupLink,{id:i}),e=s.getGroupHtmlTemplate(),e=s.getFormatString(e,{groupId:i,groupName:u("escapeHtml")(n),groupLink:a});t<1?(r+=e,o.groupMembershipLayout={groupId:i,groupName:n,groupLink:a}):t<2&&(c+=e)}),0===n?o.notificationDisplayText=s.normalizeYouHaveText(i,a):2<a||n<a?(e=2<n?a-2:a-n,o.notificationDisplayText=s.normalizeMultipleDisplayText(i,r,c,e)):o.notificationDisplayText=2===a?s.normalizeDoubleDisplayText(i,r,c):s.normalizeSingleDisplayText(i,r)}}}n.$inject=["notificationStreamUtility","$log","thumbnailConstants","$filter"],i.Z.directive("groupMembership",n),t.default=n},8295:function(e,t,i){"use strict";i.r(t);var r=i(792),n=i(5734),c=i.n(n),i=i(8119);function a(t,a,o){return{restrict:"A",scope:!0,link:function(i,n){i.callbackLazyLoad=function(){if(!i.notificationApiParams)return!1;i.notificationApiParams.loadMoreNotifications&&(i.layout.notiticationsLazyLoadingEnabled=!0,t.getRecentNotifications(i.notificationApiParams.startIndexOfNotifications,i.notificationApiParams.pageSizeOfNotifications).then(function(e){i.layout.notiticationsLazyLoadingEnabled=!1,e&&0<e.length?(i.buildNotificationsList(e),i.notificationApiParams.startIndexOfNotifications=i.notificationApiParams.startIndexOfNotifications+i.notificationApiParams.pageSizeOfNotifications,e.length<i.notificationApiParams.pageSizeOfNotifications&&(i.notificationApiParams.loadMoreNotifications=!1,i.notificationApiParams.startIndexOfNotifications=0)):(i.notificationApiParams.loadMoreNotifications=!1,i.notificationApiParams.startIndexOfNotifications=0)},function(){i.layout.notiticationsLazyLoadingEnabled=!1,o.debug("---error from get Notificaitons in lazyLoadingDirective.js---")}))},i.setupScrollbar=function(){n.mCustomScrollbar({autoExpandScrollbar:!1,scrollInertia:5,contentTouchScroll:1,mouseWheel:{preventDefault:!0},callbacks:{onTotalScrollOffset:100,onTotalScroll:i.callbackLazyLoad,onOverflowYNone:i.callbackLazyLoad}})},i.destroyScrollbar=function(){o.debug("----- destroyScrollbar ----"),n.mCustomScrollbar("destroy")};var e=i.$watch(function(){return i.layout&&i.layout.isLazyLoadingRequested},function(e,t){c().isDefined(e)&&e!==t&&(o.debug("----- initializeLayout ----"),e?i.library.inApp?(r.Scrollbar.setUpOverflowY(n,i.callbackLazyLoad),r.Scrollbar.listenToScroll(a,null,i.callbackLazyLoad)):i.setupScrollbar():i.library.inApp||i.destroyScrollbar())},!0);i.$on("$destroy",function(){e&&e()})}}}a.$inject=["notificationStreamService","$document","$log"],i.Z.directive("lazyLoading",a),t.default=a},1354:function(e,t,i){"use strict";i.r(t);var n=i(5734),o=i.n(n),i=i(8119);function a(n,a){var i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"},t=function(){var e,t=document.createElement("supportedEvent");for(e in i)if(o().isDefined(t.style[e]))return i[e]}();return{restrict:"A",link:function(i,e){e.bind(t,function(e){n.debug("got a css transition event",e),0<=e.target.className.search("slide-out-left")&&i.$evalAsync(function(){i.removeNotification(i.notification.id)})}),i.updateNotificationSetting=function(t){a.updateNotificationSettings(i.notification.notificationSourceType,t).then(function(e){n.debug("turnOffNotification -- success",e),i.notification.isTurnOff=!t},function(e){n.debug("turnOffNotification --fail")})}}}}a.$inject=["$log","notificationStreamService"],i.Z.directive("notificationCard",a),t.default=a},3828:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationContentTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationContent",n),t.default=n},2422:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){return{restrict:"A",replace:!0,transclude:!0,templateUrl:e.templates.notificationContentViewTemplate,scope:{library:"=",contentViewManager:"=",viewId:"@",isActive:"=?"},link:function(e){e.contentViewManager.addContentView(e)}}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationContentView",n),t.default=n},1695:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamBaseViewTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamBase",n),t.default=n},1840:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamBaseViewTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamBaseView",n),t.default=n},6359:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,n){return{restrict:"A",replace:!0,scope:!0,link:function(t,i){e.on("click touchstart",function(e){t.layout&&(!t.layout.isStreamBodyInteracted&&0<i.has(e.target).length?t.layout.isStreamBodyInteracted=!0:t.layout.isStreamBodyInteracted&&0<!i.has(e.target).length&&(t.layout.isStreamBodyInteracted=!1),n.debug(" ------------------scope.layout.isStreamBodyInteracted----------------- "+t.layout.isStreamBodyInteracted))})}}}n.$inject=["$document","$log"],i.Z.directive("notificationStreamBody",n),t.default=n},1413:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.notificationStreamContainerTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamContainer",n),t.default=n},1978:function(e,t,i){"use strict";i.r(t);var n=i(8119),o=i(792);function a(n,e,a){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:n.templates.privateMessageTemplate,link:function(i){!function(){i.thumbnailTypes=a.thumbnailTypes,i.notificationSourceType=n.notificationSourceType,i.friendRequestLink=n.layout.friendRequestLink,i.privateMessageLayout={displayUserId:null,displayUserName:"",messagePreview:"",isStacked:!1};var e=i.notification.metadataCollection,t=i.notification.notificationSourceType;(1<i.notification.eventCount||e&&0===e.length)&&(i.privateMessageLayout.isStacked=!0),e&&0<e.length&&(t=n.normalizeUser(t,e[0]),i.privateMessageLayout.displayUserId=t.userId,i.privateMessageLayout.displayUserName=o.DisplayNames&&o.DisplayNames.Enabled()?t.displayName:t.userName,i.privateMessageLayout.messagePreview=e[0].BodyPreview)}()}}}a.$inject=["notificationStreamUtility","$log","thumbnailConstants"],n.Z.directive("privateMessage",a),t.default=a},2799:function(e,t,i){"use strict";i.r(t);var n=i(792);function a(){return{restrict:"A",link:function(e,t){t.ready(function(){null!==n.NotificationStreamService&&void 0!==n.NotificationStreamService&&n.NotificationStreamService.renderSendrMetaActionsList(t[0])})}}}i(8119).Z.directive("sendrMetaActionsList",a),t.default=a},1226:function(e,t,i){"use strict";i.r(t);var n=i(792);function a(){return{restrict:"A",link:function(e,t){t.ready(function(){null!==n.NotificationStreamService&&void 0!==n.NotificationStreamService&&n.NotificationStreamService.renderSendrNotification(t[0])})}}}i(8119).Z.directive("sendrNotification",a),t.default=a},3587:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:e.templates.testTemplate,link:function(t){var e=t.notification.metadataCollection;t.notificationDisplayText="",e.forEach(function(e){t.notificationDisplayText+=e.Detail})}}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("test",n),t.default=n},7554:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(t){return function(e){return t.sortGameUpdatesByCreatedDate(e,!1)}}n.$inject=["gameUpdatesUtility"],i.Z.filter("sortGameUpdates",n),t.default=n},4779:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(t){return function(e){return t.sortNotificationsByEventDate(e,!1)}}n.$inject=["notificationStreamUtility"],i.Z.filter("sortNotificationsByEventDateDesc",n),t.default=n},8119:function(e,t,i){"use strict";var n=i(792),a=i(5734),a=i.n(a)().module("notificationStream",["robloxApp","ui.bootstrap","notificationStreamHtmlTemplate","thumbnails"]).config(["languageResourceProvider",function(e){var t=n.Lang.NotificationStreamResources,i={"Message.GroupJoinRequestAcceptedSingle":t&&t["Message.GroupJoinRequestAcceptedSingle"]||"Your request to join {groupOne} has been accepted.","Message.GroupJoinRequestAcceptedDouble":t&&t["Message.GroupJoinRequestAcceptedDouble"]||"Your requests to join {groupOne} and {groupTwo} have been accepted.","Message.GroupJoinRequestAcceptedMultiple":t&&t["Message.GroupJoinRequestAcceptedMultiple"]||"Your requests to join {groupOne}, {groupTwo}, and {groupMultipleCount, plural, =1 {# other} other {# others}} have been accepted."};n.Lang.NotificationStreamResources&&(e.setLanguageKeysFromFile(t),e.setLanguageKeysFromFile(i))}]);t.Z=a},4403:function(e,t,i){"use strict";i.r(t);var c=i(792),n=i(5734),u=i.n(n),i=i(8119);function a(s,l,e,i,t,n){var o=t.endpoints,a=t.apiParams;function r(e,t,i,n){for(var a,o=[],r=0,c=t.slice(r,i);0<c.length&&r<t.length;)a=n(c),o.push(s.httpGet(e,a)),r+=i,c=t.slice(r,r+i);return l.all(o)}return{markGameUpdateReadAsync:function(e,t,i){var n=o.getReadEndpoint(),i={universeId:e,createdOn:t.toString(),currentUserId:i};return s.httpPost(n,i)},markGameUpdateInteractedAsync:function(e,t,i,n){var a=o.getInteractedEndpoint(),n={universeId:e,createdOnKey:t,interactionType:i,currentUserId:n};return s.httpPost(a,n)},multiGetPlaceDetailsAsync:function(e){return e&&0!==e.length?(e=e,r(o.getGameDetailsEndpoint(),e,a.placeDetailBatchSize,function(e){return{placeIds:e}}).then(function(e){var t={};return e&&0!==e.length?(u().forEach(e,function(e){e&&u().forEach(e,function(e){t[e.placeId]={universeId:e.universeId,isPlayable:e.isPlayable,imageToken:e.imageToken}})}),t):null})):l(function(e,t){e(null)})},multiGetGameUpdatesAsync:function(e){return e&&0!==e.length?(e=e,r(o.getGameUpdatesEndpoint(),e,a.gameUpdateBatchSize,function(e){return{universeIds:e}}).then(function(e){var t=[];return e&&0!==e.length?(u().forEach(e,function(e){e&&u().forEach(e,function(e){t.push(e)})}),t):null})):l(function(e,t){e(null)})},getGameFollowingsForUserAsync:function(e){e=o.getGameFollowingsEndpoint(e);return s.httpGet(e,{})},followGameAsync:function(e,t){t=o.getFollowGameEndpoint(e,t);return s.httpPost(t,{})},unfollowGameAsync:function(e,t){t=o.getFollowGameEndpoint(e,t);return s.httpDelete(t,{})},reportAbuse:function(e,t){t=i.getAbsoluteUrl(o.getAbuseReportUrl(e,t,encodeURIComponent(n.location.href)));c.AbuseReportDispatcher?c.AbuseReportDispatcher.triggerUrlAction(t):n.location.href=t}}}a.$inject=["httpService","$q","$log","urlService","gameUpdatesConstants","$window"],i.Z.factory("gameUpdatesService",a),t.default=a},158:function(e,t,i){"use strict";i.r(t);var n=i(5734),u=i.n(n),i=i(8119);function a(a,c,e,t,n,i){var l=t.parseEpochMilliseconds,s=i.gameNameMaxLength;return{formatAggregatedDisplayText:function(e,t,i){return 0===i?n.gameUpdates.formatDisplayTextDouble(e,t):n.gameUpdates.formatDisplayTextMultiple(e,t,i)},getGameUpdatesAsync:function(e,r,t){return a.multiGetGameUpdatesAsync(e,t?new Date(t.getTime()-6e4):null).then(function(e){var t,i,n,a,o;if(!e||0===e.length)return null;for(t=0;t<e.length;t++)i=e[t],n=l(i.createdOn),r.hasOwnProperty(i.universeId)?((o=r[i.universeId]).updateMessage=i.content,o.createdOn=n,o.createdOnKey=i.createdOnKey):r[i.universeId]={universeId:i.universeId,rootPlaceId:i.rootPlaceId,updateMessage:i.content,createdOn:n,createdOnKey:i.createdOnKey,gameName:i.universeName,truncatedGameName:(a=i.universeName,o=void 0,(o=a)&&a.length>s&&(o="".concat(a.substr(0,s-3),"...")),o),isPlayable:null,gameLinkUrl:i.rootPlaceId?c.getAbsoluteUrl("/games/".concat(i.rootPlaceId,"?originatorType=GameUpdateNotification&originatorId=").concat(n)):null,gameLinkUrlForApp:i.rootPlaceId?"games/".concat(i.rootPlaceId,"?originatorType=GameUpdateNotification&originatorId=").concat(n):null};return e})},fillGameDetails:function(n){var e,t,i=[];for(e in n)n.hasOwnProperty(e)&&null===(t=n[e]).isPlayable&&i.push(t.rootPlaceId);0!==i.length&&a.multiGetPlaceDetailsAsync(i).then(function(e){if(e)return u().forEach(e,function(e,t){var i=n[e.universeId];i&&(i.isPlayable=e.isPlayable)}),e})},aggregateGameUpdateNotifications:function(e,i){if(!e||0===e.length)return null;var n=null,a=null,o=null,r=0,c={},s={};return s.id=e[0].id,s.notificationSourceType=e[0].notificationSourceType,s.metadataCollection=[],u().forEach(e,function(e){var t;e.eventDate&&(t=l(e.eventDate),(!n||n<t)&&(n=t,o=e.eventDate),(!a||t<a)&&(a=t)),u().forEach(e.metadataCollection,function(e){i.hasOwnProperty(e.UniverseId)&&!c.hasOwnProperty(e.UniverseId)&&(s.metadataCollection.push(e),c[e.UniverseId]=!0)}),e.eventCount&&(r+=e.eventCount)}),s.eventDate=o,s.minEventDate=new Date(a),s.eventCount=Math.max(r,s.metadataCollection.length),0<s.metadataCollection.length?s:null},sortGameUpdatesByCreatedDate:function(t,i){if(!t)return null;var e=Object.keys(t).map(function(e){return t[e]});return e.sort(function(e,t){return i?e.createdOn-t.createdOn:t.createdOn-e.createdOn}),e}}}a.$inject=["gameUpdatesService","urlService","$log","notificationStreamUtility","layoutLibraryService","gameUpdatesConstants"],i.Z.factory("gameUpdatesUtility",a),t.default=a},5978:function(e,t,i){"use strict";i.r(t);i=i(8119);function n(e,t){var n=t;return{links:{profileLinkName:"goToProfilePage",profileLink:"/users/{id}/profile",friendRequestLinkName:"viewAllFriendRequests",friendRequestTabName:"Friends",friendRequestLink:"/users/friends#!/friend-requests",settingLinkName:"goToSettingPage",settingTabName:"Settings",settingLink:"/my/account#!/notifications",friendsTabName:"Friends",friendsLink:"/users/friends",inboxTabName:"Messages",inboxLink:"/my/messages/#!/inbox",inboxMessageDetailQuery:"?conversationId=",groupLinkName:"goToGroupPage",groupLink:"/groups/{id}",myGroupsLink:"/my/groups"},stringTemplates:{boldLink:"<a class='font-caption-header'>{username}</a>",userLink:"<a class='text-name small font-caption-header' type='goToProfilePage' user_id='{userid}' href='{profilelink}'>{username}</a>",boldDisplayNameLink:"<a class='font-caption-header'>{displayname}</a>",displayNameLink:"<span class='cursor-pointer text-name paired-name'><a class='element small text-emphasis' type='goToProfilePage' user_id='{userid}' href='{profilelink}'>{displayname}</a><span class='text-emphasis small connector'>@</span><span class='small element'>{username}</span></span>",groupLink:"<a class='text-name small font-caption-header' type='goToGroupPage' group_id='{groupid}' href='{grouplink}'>{groupname}</a>"},newFriendRequests:function(e){return n.get("Message.YouHaveNewFriendRequests",{numberOfRequests:e})},newFriends:function(e){return n.get("Message.YouHaveNewFriends",{numberOfFriends:e})},newGroups:function(e){return n.get("Message.YouHaveBeenAcceptedToNewGroups",{numberOfGroups:e})},friendRequestAcceptedSingle:function(e){return n.get("Message.FriendRequestAcceptedSingle",{userOne:e})},friendRequestAcceptedDouble:function(e,t){return n.get("Message.FriendRequestAcceptedDouble",{userOne:e,userTwo:t})},friendRequestAcceptedMultiple:function(e,t,i){return n.get("Message.FriendRequestAcceptedMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},groupJoinRequestAcceptedSingle:function(e){return n.get("Message.GroupJoinRequestAcceptedSingle",{groupOne:e})},groupJoinRequestAcceptedDouble:function(e,t){return n.get("Message.GroupJoinRequestAcceptedDouble",{groupOne:e,groupTwo:t})},groupJoinRequestAcceptedMultiple:function(e,t,i){return n.get("Message.GroupJoinRequestAcceptedMultiple",{groupOne:e,groupTwo:t,groupMultipleCount:i})},friendRequestSentSingle:function(e){return n.get("Message.FriendRequestSentSingle",{userOne:e})},friendRequestSentDouble:function(e,t){return n.get("Message.FriendRequestSentDouble",{userOne:e,userTwo:t})},friendRequestSentMultiple:function(e,t,i){return n.get("Message.FriendRequestSentMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},confirmAcceptedSingle:function(e){return n.get("Message.ConfirmAcceptedSingle",{userOne:e})},confirmAcceptedDouble:function(e,t){return n.get("Message.ConfirmAcceptedDouble",{userOne:e,userTwo:t})},confirmAcceptedMultiple:function(e,t,i){return n.get("Message.ConfirmAcceptedMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},confirmSentSingle:function(e){return n.get("Message.ConfirmSentSingle",{userOne:e})},confirmSentDouble:function(e,t){return n.get("Message.ConfirmSentDouble",{userOne:e,userTwo:t})},confirmSentMultiple:function(e,t,i){return n.get("Message.ConfirmSentMultiple",{userOne:e,userTwo:t,userMultipleCount:i})},textTemplate:{newNotification:function(e){return n.get("Message.NumberofNewNotifications",{notificationCount:e})},noNetworkConnectionText:function(){return n.get("Label.NoNetworkConnectionText")}},friendRequestActionType:{acceptIgnoreBtns:"AcceptIgnoreBtns",chatBtn:"chatBtn",viewAllBtn:"ViewAllBtn"},directiveTemplatesName:{notificationIndicatorTemplate:"notification-indicator",notificationStreamIndicatorTemplate:"notification-stream-indicator",notificationContentTemplate:"notification-content",friendRequestReceivedTemplate:"friend-request-received",friendRequestAcceptedTemplate:"friend-request-accepted",friendRequestTemplate:"friend-request",privateMessageTemplate:"private-message",developerMetricsAvailableTemplate:"developer-metrics-available",testTemplate:"test",notificationStreamBaseTemplate:"notification-stream-base",notificationStreamIconTemplate:"notification-stream-icon",notificationContentViewTemplate:"notification-content-view-template",gameUpdateTemplate:"game-update-template",gameUpdateActionPopoverTemplate:"game-update-action-popover-template",groupMembershipTemplate:"group-membership",notificationStreamBaseViewTemplate:"notification-stream-base-view",notificationStreamContainerTemplate:"notification-stream-container"},notificationSourceType:{test:"Test",friendRequestReceived:"FriendRequestReceived",friendRequestAccepted:"FriendRequestAccepted",privateMessageReceived:"PrivateMessageReceived",developerMetricsAvailable:"DeveloperMetricsAvailable",gameUpdate:"GameUpdate",groupJoinRequestAccepted:"GroupJoinRequestAccepted",sendr:"SENDR"},gameUpdates:{formatDisplayTextDouble:function(e,t){return n.get("Message.AggregatedGameUpdateDouble",{gameOne:"<span class='font-caption-header'>".concat(e,"</span>"),gameTwo:"<span class='font-caption-header'>".concat(t,"</span>")})},formatDisplayTextMultiple:function(e,t,i){return n.get("Message.AggregatedGameUpdateMultiple",{gameOne:"<span class='font-caption-header'>".concat(e,"</span>"),gameTwo:"<span class='font-caption-header'>".concat(t,"</span>"),otherCount:i})}}}}n.$inject=["$log","languageResource"],i.Z.factory("layoutLibraryService",n),t.default=n},9822:function(e,t,i){"use strict";i.r(t);var r=i(792),i=i(8119);function n(i,e,t){var n=r.EnvironmentUrls.notificationApi,a=r.EnvironmentUrls.chatApi,o=r.EnvironmentUrls.friendsApi;return{endpoints:{initializeData:{url:n+"/v2/stream-notifications/metadata",retryable:!0},unreadCount:{url:n+"/v2/stream-notifications/unread-count",retryable:!0,withCredentials:!0},getRecent:{url:n+"/v2/stream-notifications/get-recent",retryable:!0,withCredentials:!0},clearUnread:{url:n+"/v2/stream-notifications/clear-unread",retryable:!1,withCredentials:!0},markInteracted:{url:n+"/v2/stream-notifications/mark-interacted",retryable:!1,withCredentials:!0},updateNotificationSettings:{url:n+"/v2/notifications/update-notification-settings",retryable:!1,withCredentials:!0},getChatPrivacySettings:{url:a+"/v2/chat-settings",retryable:!1,withCredentials:!0}},initialize:function(){return i.httpGet(this.endpoints.initializeData,{})},getChatPrivacySettings:function(){return i.httpGet(this.endpoints.getChatPrivacySettings,{})},unreadCount:function(){return i.httpGet(this.endpoints.unreadCount,{})},clearUnread:function(){return i.httpPost(this.endpoints.clearUnread,{})},getRecentNotifications:function(e,t){t={startIndex:e,maxRows:t};return i.httpGet(this.endpoints.getRecent,t)},markInteracted:function(e){e={eventId:e};return i.httpPost(this.endpoints.markInteracted,e)},acceptFriendV2:function(e){e={url:o+"/v1/users/"+e+"/accept-friend-request",withCredentials:!0};return i.httpPost(e)},ignoreFriendV2:function(e){e={url:o+"/v1/users/"+e+"/decline-friend-request",withCredentials:!0};return i.httpPost(e)},updateNotificationSettings:function(e,t){e={notificationSourceType:e,receiverDestinationType:"NotificationStream",isEnabled:t},t=[];return t.push(e),i.httpPost(this.endpoints.updateNotificationSettings,t)}}}n.$inject=["httpService","$log","urlService"],i.Z.factory("notificationStreamService",n),t.default=n},167:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return a}});var c=i(792),s=HeaderScripts,t=i(5734),l=i.n(t),i=i(8119);function n(e,a,t){var o=a.notificationSourceType,i=a.links,r=a.stringTemplates;function n(e){if(!e)return null;if(e.getTime)return e.getTime();if("string"!=typeof e)return null;var t=/Date\((\d+)\)/.exec(e);return t?parseInt(t[1]):new Date(e).getTime()||null}return{templates:a.directiveTemplatesName,links:i,textTemplate:a.textTemplate,stringTemplates:r,layout:{pageDataInitialized:!1,firstTimeNotificationStream:!1,getRecentDataInitialized:!1,isNotificationContentOpen:!1,isLazyLoadingRequested:!1,isGetRecentDataLoadedRequested:!0,notificationsScrollbarSelector:"#notification-stream-scrollbar",settingLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.settingLink):i.settingLink,groupLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.groupLink):i.groupLink,friendRequestLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.friendRequestLink):i.friendRequestLink,bannerEnabled:!1,emptyNotificationEnabled:!1,notificationsLazyLoadingEnabled:!1,isNotificationsLoading:!1,isStreamBodyInteracted:!1,isDisplayNamesEnabled:c.DisplayNames&&c.DisplayNames.Enabled(),bannerText:"",errorText:"",dataBindSelector:"#notification-stream",dataContainerSelector:"#notification-stream-container"},notificationApiParams:{startIndexOfNotifications:0,pageSizeOfNotifications:10,loadMoreNotifications:!1},library:{unreadNotifications:0,userIdList:[],userLibrary:{},prefixLocalStoragekey:"user_",inApp:!!c.DeviceMeta&&(0,c.DeviceMeta)().isInApp,isPhone:!!c.DeviceMeta&&(0,c.DeviceMeta)().isPhone,isTouch:!!c.DeviceFeatureDetection&&c.DeviceFeatureDetection.isTouch,eventStreamMetaData:{},gameUpdateModels:{},notificationContentViews:{main:"main",gameUpdates:"gameUpdates"},canLaunchGameFromGameUpdate:!1,currentUserId:s.authenticatedUser.id},notificationsName:e.notifications,notificationSourceType:o,signalRType:e.types,friendRequestReceivedLayout:a.friendRequestReceivedLayout,friendRequestAcceptedLayout:a.friendRequestAcceptedLayout,friendRequestActionType:a.friendRequestActionType,getAbsoluteUrl:function(e,t){return c.Endpoints?c.Endpoints.generateAbsoluteUrl(e,t,!0):getFormatString(e,t)},getFormatString:function(e,t){for(var i in t){var n=t[i],a=new RegExp("{".concat(i.toLowerCase(),"(:.*?)?\\??}"));e=e.replace(a,n)}return e},isNotificationTypeValid:function(e){var t,i=!1;for(t in o)if(o[t]===e){i=!0;break}return i},isCardClickable:function(e){switch(e.notificationSourceType){case o.friendRequestAccepted:return 1<e.eventCount||1===e.eventCount&&0===e.metadataCollection.length;case o.privateMessageReceived:case o.developerMetricsAvailable:case o.groupJoinRequestAccepted:return!0}return!1},normalizeUser:function(e,t){var i={userId:null,userName:null,displayName:null};switch(e){case o.friendRequestReceived:i.userId=t.SenderUserId,i.userName=t.SenderUserName,i.displayName=t.SenderDisplayName;break;case o.friendRequestAccepted:i.userId=t.AccepterUserId,i.userName=t.AccepterUserName,i.displayName=t.AccepterDisplayName;break;case o.privateMessageReceived:i.userId=t.AuthorUserId,i.userName=t.AuthorUserName,i.displayName=t.AuthorDisplayName;break;case o.developerMetricsAvailable:case o.test:}return i},getUserHtmlTemplate:function(e,t){var i="",n=c.DisplayNames&&c.DisplayNames.Enabled();switch(e){case o.friendRequestAccepted:i=1<t?n?r.boldDisplayNameLink:r.boldLink:n?r.displayNameLink:r.userLink;break;case o.friendRequestReceived:default:i=n?r.displayNameLink:r.userLink}return i},getGroupHtmlTemplate:function(){return r.groupLink},normalizeYouHaveText:function(e,t){switch(e){case o.friendRequestReceived:return a.newFriendRequests(t);case o.friendRequestAccepted:return a.newFriends(t);case o.groupJoinRequestAccepted:return a.newGroups(t);default:return""}},normalizeSingleDisplayText:function(e,t){switch(e){case o.friendRequestReceived:return a.friendRequestSentSingle(t);case o.friendRequestAccepted:return a.friendRequestAcceptedSingle(t);case o.groupJoinRequestAccepted:return a.groupJoinRequestAcceptedSingle(t);default:return""}},normalizeSingleConfirmedText:function(e,t){switch(e){case o.friendRequestReceived:return a.confirmSentSingle(t);case o.friendRequestAccepted:return a.confirmAcceptedSingle(t);default:return""}},normalizeDoubleDisplayText:function(e,t,i){switch(e){case o.friendRequestReceived:return a.friendRequestSentDouble(t,i);case o.friendRequestAccepted:return a.friendRequestAcceptedDouble(t,i);case o.groupJoinRequestAccepted:return a.groupJoinRequestAcceptedDouble(t,i);default:return""}},normalizeDoubleConfirmedText:function(e,t,i){switch(e){case o.friendRequestReceived:return a.confirmSentDouble(t,i);case o.friendRequestAccepted:return a.confirmAcceptedDouble(t,i);default:return""}},normalizeMultipleDisplayText:function(e,t,i,n){switch(e){case o.friendRequestReceived:return a.friendRequestSentMultiple(t,i,n);case o.friendRequestAccepted:return a.friendRequestAcceptedMultiple(t,i,n);case o.groupJoinRequestAccepted:return a.groupJoinRequestAcceptedMultiple(t,i,n);default:return""}},normalizeMultipleConfirmedText:function(e,t,i,n){switch(e){case o.friendRequestReceived:return a.confirmSentMultiple(t,i,n);case o.friendRequestAccepted:return a.confirmAcceptedMultiple(t,i,n);default:return""}},buildScrollbar:function(e){l().element(e).mCustomScrollbar({autoHideScrollbar:!1,autoExpandScrollbar:!1,contentTouchScroll:1e4,documentTouchScroll:!1,mouseWheel:{preventDefault:!0},advanced:{autoScrollOnFocus:!1}})},isGameUpdateNotification:function(e){return e===o.gameUpdate},isReactNotification:function(e){return e===o.sendr},parseEpochMilliseconds:n,sortNotificationsByEventDate:function(t,i){if(!t)return null;var e=Object.keys(t).map(function(e){return t[e]});return e.sort(function(e,t){e=n(e.eventDate)||0,t=n(t.eventDate)||0;return i?e-t:t-e}),e}}}n.$inject=["signalR","layoutLibraryService","$log"],i.Z.factory("notificationStreamUtility",n);var a=n},5198:function(e){e.exports='<a id="nav-ns-icon" class="roblox-popover rbx-menu-item notification-stream-icon" data-bind="notification-stream-base" data-container="notification-stream-container"> <span class="icon-nav-notification-stream" id="nav-notifications"></span> <span class="notification-red notification" ng-show="layout.unreadNotifications > 0 && (!layout.isNotificationContentOpen)"> {{layout.unreadNotifications | abbreivateCount}} </span> </a>'},3004:function(e){e.exports='<div class="notification-stream" ng-class="{\'inApp\': library.inApp}"> <div notification-indicator></div> </div>'},3531:function(e){e.exports='<div class="notification-stream-indicator" ng-class="{\'inApp\': library.inApp}"> <a id="nav-ns-icon" class="rbx-menu-item notification-stream-icon"> <span class="icon-nav-notification-stream" id="nav-notifications"></span> <span class="notification-red notification" ng-show="layout.unreadNotifications > 0 && (!layout.isNotificationContentOpen)"> {{layout.unreadNotifications | abbreivateCount}} </span> </a> </div>'},177:function(e){e.exports='<div class="developer-metrics-notification-container"> <div class="notification-image-container"> <div title="{{developerMetricsAvailableLayout.gameName}}"> <a class="text-name font-caption-header" ng-href="{{developerMetricsAvailableLayout.gameLinkUrl}}" click-in-card type="viewDeveloperMetrics" onclick="event.stopPropagation()"> <thumbnail-2d class="notification-icon" thumbnail-target-id="developerMetricsAvailableLayout.universeId" thumbnail-type="thumbnailTypes.gameIcon"> </thumbnail-2d> </a> </div> </div> <div class="notification-item-content"> <div class="notification-data-container"> <span class="small text notification-display-text" ng-bind-html="\'Message.DeveloperMetricsAvailable\' | translate:developerMetricsAvailableLayout"> </span> <div class="text-date-hint"> {{notification.eventDate | datetime: \'full\'}} </div> </div> <div class="notification-action-container"> <button class="view-button btn-primary-xs font-caption-header" ng-class="{\'btn-full-width\': library.isPhone }" ng-click="viewButtonHandler()" ng-bind="\'Action.View\' | translate"></button> </div> </div> </div>'},6610:function(e){e.exports='<div> <div class="notification-item-front"> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm" ng-if="userIds.length >= 1" title="{{library.userLibrary[userIds[0]].name}}"> <a ng-href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" click-in-card> <thumbnail-2d class="avatar-card-image" thumbnail-target-id="userIds[0]" thumbnail-type="thumbnailTypes.avatarHeadshot"> </thumbnail-2d> </a> </div> <span class="icon-nav-group notification-image-placeholder" ng-if="!userIds || userIds.length == 0"></span> </div> <div class="notification-item-content"> <div class="notification-data-container font-caption-body"> <span class="small text notification-display-text" click-in-card ng-hide="notification.metadataCollection[0].IsAccepted" ng-bind-html="notificationDisplayText"></span> <span class="small text notification-display-text" click-in-card ng-show="notification.metadataCollection[0].IsAccepted" ng-bind-html="requestConfirmedText"></span> <div class="text-date-hint" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> <div class="notification-action-container"> <button class="btn-control-xs font-caption-header" id="ignore-fr-btn" ng-show="notification.friendRequestActionType === friendRequestActionType.acceptIgnoreBtns" ng-click="ignoreFriend({targetUserId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Ignore\' | translate"></button> <button class="btn-primary-xs font-caption-header" id="accept-fr-btn" ng-show="notification.friendRequestActionType === friendRequestActionType.acceptIgnoreBtns" ng-click="acceptFriend({targetUserId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Accept\' | translate"></button> <button class="btn-primary-xs roblox-popover-close font-caption-header" id="chat-btn" ng-class="{\'btn-full-width\': library.isPhone}" ng-show="notification.friendRequestActionType === friendRequestActionType.chatBtn && !library.isChatDisabledByPrivacySetting" ng-click="chat({friendId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Chat\' | translate"></button> <a class="btn-secondary-xs font-caption-header" id="view-all-btn" ng-class="{\'btn-full-width\': library.isPhone }" ng-show="notification.friendRequestActionType === friendRequestActionType.viewAllBtn" click-in-card type="viewAllFriendRequests" ng-href="{{friendRequestLink}}" ng-bind="\'Action.ViewAll\' | translate"></a> </div> </div> </div> <div class="notification-item-back"> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm" ng-if="userIds.length >= 1" title="{{library.userLibrary[userIds[0]].name}}"> <a ng-href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" click-in-card> <thumbnail-2d class="avatar-card-image" thumbnail-target-id="userIds[0]" thumbnail-type="thumbnailTypes.avatarHeadshot"> </thumbnail-2d> </a> </div> <span class="icon-nav-group notification-image-placeholder" ng-if="!userIds || userIds.length == 0"></span> </div> <div class="notification-item-content"> <div class="notification-data-container font-caption-body"> <span class="text notification-display-text" click-in-card ng-show="notification.metadataCollection[0].IsAccepted" ng-bind-html="requestConfirmedText"></span> <div class="text-date-hint" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> <div class="notification-action-container" ng-show="notification.notificationSourceType == notificationSourceType.friendRequestReceived"> <button class="btn-primary-xs font-caption-header" id="chat-btn" ng-class="{\'btn-full-width\': library.isPhone}" ng-show="notification.friendRequestActionType == friendRequestActionType.chatBtn && !library.isChatDisabledByPrivacySetting" ng-click="chat({friendId: userIds[0], notificationId: notification.id, event: $event})"> <span ng-bind="\'Action.Chat\' | translate"></span> </button> </div> </div> </div> </div>'},4970:function(e){e.exports='<div> <ul class="dropdown-menu" role="menu"> <li> <a class="unfollow-link" ng-click="unfollowGame($event)"><span class="action-icon icon-follow-game-gray"></span><span ng-bind="\'Action.UnfollowGame\' | translate:{gameName: gameUpdateModel.truncatedGameName}"></span></a> </li> <li> <a class="report-abuse-link" ng-click="reportAbuse()"><span class="action-icon icon-report-darkgray"></span><span ng-bind="\'Action.ReportAbuse\' | translate"></span></a> </li> <li class="li-cancel-link"> <a class="cancel-link" ng-click="closeActionMenu()"><span class="action-icon icon-close"></span><span ng-bind="\'Action.Cancel\' | translate"></span></a> </li> </ul> </div>'},5931:function(e){e.exports='<div class="game-update-notification-container" ng-class="{ \'active\':isActionMenuOpen }"> <div class="notification-image-container" ng-show="isAggregated || !gameUpdateModel.isUnfollowed"> <div ng-if="gameUpdateModel.universeId !== null" title="{{gameUpdateModel.gameName}}"> <a ng-click="goToGameDetails()"> <thumbnail-2d class="notification-icon" thumbnail-target-id="gameUpdateModel.universeId" thumbnail-type="thumbnailTypes.gameIcon"> </thumbnail-2d> </a> </div> </div> <div class="notification-item-content" ng-show="!isAggregated && !gameUpdateModel.isUnfollowed"> <a class="more-link" uib-popover-template="actionMenuTemplate" popover-trigger="\'outsideClick\'" popover-placement="bottom-right" popover-is-open="isActionMenuOpen" popover-append-to-body="true" popover-class="game-update-action-menu" popover-animation="false"> <span class="icon-more-gray-vertical"></span> </a> <div class="notification-data-container" ng-class="{ \'single-game-update\': !isAggregated, \'play-button-visible\':library.canLaunchGameFromGameUpdate }"> <span class="small text notification-display-text"> <a class="text-name font-caption-header" ng-click="goToGameDetails()"> {{gameUpdateModel.truncatedGameName}} </a> : {{gameUpdateModel.updateMessage}} </span> <span class="spinner spinner-sm" ng-if="!gameUpdateModel.updateMessage"></span> <div class="text-secondary text-date-hint"> {{gameUpdateModel.createdOn | datetime: \'full\'}} </div> </div> <div class="notification-action-container"> <div class="font-caption-body not-playable-message" ng-if="library.canLaunchGameFromGameUpdate && gameUpdateModel.isPlayable === false"> <span ng-bind="\'Message.GameNotPlayableOnDevice\' | translate"></span> </div> <button class="play-button btn-growth-xs font-caption-header" ng-class="{\'btn-full-width\': library.isPhone }" ng-if="library.canLaunchGameFromGameUpdate && gameUpdateModel.isPlayable" ng-click="playButtonHandler()" ng-bind="\'Action.Play\' | translate"></button> </div> </div> <div class="notification-item-content aggregated" ng-show="isAggregated" ng-click="viewGameUpdates()"> <div class="notification-data-container"> <span class="small text notification-display-text" ng-bind-html="aggregatedDisplayText"></span> <div class="text-secondary text-date-hint"> {{gameUpdateModel.createdOn | datetime: \'full\'}} </div> <span class="icon-right"></span> </div> </div> <div ng-show="!isAggregated && gameUpdateModel.isUnfollowed"> <div class="unfollowed-game-update-notification small text" ng-class="{ \'play-button-visible\':library.canLaunchGameFromGameUpdate }"> <span ng-bind="\'Message.UnfollowedGame\' | translate:{gameName: gameUpdateModel.truncatedGameName}"></span><a class="undo-unfollow-link text-link small" ng-click="followGame()" ng-bind="\'Action.Undo\' | translate"></a> </div> </div> </div>'},9177:function(e){e.exports='<div> <div class="notification-image-container"> <div ng-if="groupMembershipLayout.groupId !== null" title="{{groupMembershipLayout.groupName}}"> <a ng-href="{{groupMembershipLayout.groupLink}}" type="goToGroupPage" click-in-card onclick="event.stopPropagation()"> <thumbnail-2d class="notification-icon" thumbnail-target-id="groupMembershipLayout.groupId" thumbnail-type="thumbnailTypes.groupIcon"> </thumbnail-2d> </a> </div> </div> <div class="notification-item-content"> <div class="notification-data-container"> <span class="font-caption-body text notification-display-text" ng-bind-html="notificationDisplayText"> </span> <div class="text-date-hint" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> </div> </div>'},6763:function(e){e.exports='<div class="notification-content-view" ng-show="isActive" ng-transclude></div>'},643:function(e){e.exports='<div ng-controller="notificationStreamController" id="notification-stream-base-view" ng-class="{\'inApp\': library.inApp,\'isPhone\': library.isPhone}"> <div notification-stream-container></div> </div>'},5091:function(e){e.exports='<div class="notification-stream-content" id="notification-stream-container" ng-cloak> <div ng-controller="notificationsController" class="notification-stream-wrap open"> <div class="notification-stream-container" ng-class="{\'notification-stream-container-app\': library.inApp}"> <div notification-content-view library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.main}}" is-active="true"> <div class="notification-stream-header" ng-hide="library.isPhone || library.iniOSApp"> <span class="text-label font-caption-header" ng-bind="\'Label.Notifications\' | translate"></span> <a class="text-link font-caption-header" click-in-card type="goToSettingPage" ng-href="{{layout.settingLink}}" ng-bind="\'Label.Settings\' | translate"></a> </div> <div id="notification-stream-body" class="notification-stream-body" notification-stream-body ng-class="{\'notification-stream-body-height\' : layout.getRecentDataInitialized && notificationIds.length == 0 }"> <div class="small notification-stream-banner banner-new" ng-class="{\'on\': layout.isNotificationContentOpen && layout.bannerEnabled}"> <span class="banner-text" ng-click="reloadNotificationStreamData()">{{layout.bannerText}}</span> <span id="close" class="icon-close-white" ng-click="closeBanner()"></span> </div> <div class="small notification-stream-banner banner-error" ng-class="{\'on\': layout.isNotificationContentOpen && layout.errorBannerEnabled}"> <span class="banner-text">{{layout.errorText}}</span> <span id="close" class="icon-close-white" ng-click="closeErrorBanner()"></span> </div> <div ng-show="layout.getRecentDataInitialized && notificationIds.length > 0" class="notification-stream-data"> <div id="sendr-meta-actions-container" sendr-meta-actions-list/> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar" lazy-loading> <ul class="notification-stream-list"> <li ng-repeat="notification in notifications | sortNotificationsByEventDateDesc" notification-card id="notification-stream-{{notification.id}}" ng-class="getNotificationListItemClass(notification)"> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestReceived" friend-request notification="notification" library="library" app-meta="appMeta" accept-friend="acceptFriend(targetUserId, notificationId, event)" ignore-friend="ignoreFriend(targetUserId, notificationId, event)" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" class="notification-item" ng-hide="notification.isTurnOff" ng-class="{\'flipped\': notification.isFlipped}"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestAccepted" friend-request notification="notification" library="library" app-meta="appMeta" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" ng-hide="notification.isTurnOff" class="notification-item" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.test" test notification="notification" interact-notification="interactNotification(notification)" class="notification-item"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.privateMessageReceived" private-message notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.developerMetricsAvailable" developer-metrics-available notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.gameUpdate" game-update notification="notification" library="library" content-view-manager="contentViewManager" app-meta="appMeta" class="notification-item" ng-hide="notification.isTurnOff" ng-click="null"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.groupJoinRequestAccepted" group-membership notification="notification" library="library" app-meta="appMeta" interact-notification="interactNotification(notification)" ng-hide="notification.isTurnOff" class="notification-item" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.sendr" class="sendr-notification-container" sendr-notification notification-data="{{notification}}"/> <div class="small turn-off-container" ng-hide="!notification.isTurnOff"> <span class="turn-off-text">You have turned off notifications for</span> <a class="text-link small" ng-click="updateNotificationSetting(true)">Undo</a> </div> <span class="hidden icon-turn-off" ng-click="updateNotificationSetting(false)"></span> </li> </ul> <div class="notifications-lazy-loading" ng-show="layout.notiticationsLazyLoadingEnabled"> <span class="spinner spinner-sm"></span> </div> </div> </div> <div class="notification-stream-loading" ng-hide="layout.getRecentDataInitialized"> <span class="spinner spinner-sm"></span> </div> <div class="container-empty" ng-show="layout.getRecentDataInitialized && notificationIds.length === 0 "> <div class="notification-stream-empty"></div> <div><span class="text" ng-bind="\'Label.NoNotifications\' | translate"></span></div> </div> </div> </div> <div notification-content-view class="game-updates" library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.gameUpdates}}" is-active="false"> <div class="notification-stream-header"> <a class="back-icon icon-left" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)"></a> <span class="text-label font-caption-header game-updates-header" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)" ng-bind="\'Heading.BackToAllNotifications\' | translate"> </span> </div> <div id="notification-stream-body" class="notification-stream-body game-updates"> <div class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar"> <ul class="notification-stream-list"> <li ng-repeat="gameUpdateModel in library.gameUpdateModels | sortGameUpdates" class="border-bottom notification-stream-item unInteracted game-update"> <div game-update game-update-model="gameUpdateModel" library="library" app-meta="appMeta" class="notification-item" ng-click="null" content-view-manager="contentViewManager"></div> </li> </ul> </div> </div> </div> </div> </div> </div> </div> '},9488:function(e){e.exports='<div> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm" ng-if="privateMessageLayout.displayUserId !== null" title="{{privateMessageLayout.displayUserName}}"> <a ng-href="{{library.userLibrary[privateMessageLayout.displayUserId].profileLink}}" type="goToProfilePage" user_id="{{privateMessageLayout.displayUserId}}" click-in-card onclick="event.stopPropagation()"> <thumbnail-2d class="avatar-card-image" thumbnail-target-id="privateMessageLayout.displayUserId" thumbnail-type="thumbnailTypes.avatarHeadshot"> </thumbnail-2d> </a> </div> <span class="icon-nav-group" ng-if="privateMessageLayout.displayUserId === null"></span> </div> <div class="notification-item-content"> <div class="notification-data-container"> <div class="font-caption-body notification-display-text" ng-class="{\'text\': notification.isInteracted, \'text-emphasis\': !notification.isInteracted}" ng-show="!privateMessageLayout.isStacked"> <span class="font-caption-body message-header" ng-bind-html="\'Message.MessageFrom\' | translate:{username: \'<span class=font-caption-header>\' + privateMessageLayout.displayUserName + \'</span>\'}"> </span> <span class="text-secondary message-preview" ng-bind="privateMessageLayout.messagePreview"></span> </div> <div class="font-caption-body notification-display-text" ng-class="{\'text\': notification.isInteracted, \'text-emphasis\': !notification.isInteracted}" ng-show="privateMessageLayout.isStacked" ng-bind-html="\'Message.YouReceivedMessages\' | translate:{numberOfMessagesText: \'<span class=font-caption-header>\' + notification.eventCount + \'</span>\', numberOfMessages: notification.eventCount}"> </div> <div class="text-date-hint" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> </div> </div>'},5980:function(e){e.exports='<div> <div class="notification-item-test"> <div class="notification-item-content"> <div class="notification-data-container"> <span class="text notification-display-text">{{notificationDisplayText}}</span> <div class="text-date-hint">{{notification.eventDate | datetime: \'full\'}}</div> </div> </div> </div> </div>'},792:function(e){"use strict";e.exports=Roblox},5734:function(e){"use strict";e.exports=angular}},n={};function o(e){if(n[e])return n[e].exports;var t=n[e]={exports:{}};return i[e](t,t.exports,o),t.exports}o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,{a:t}),t},o.d=function(e,t){for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){"use strict";var e=o(5734),t=o.n(e),i=o(726),n=o(8923),a=o(8119);(0,i.importFilesUnderPath)(o(965)),(0,i.importFilesUnderPath)(o(6408)),e=o(2594),(0,i.templateCacheGenerator)(t(),"notificationStreamIconHtmlTemplate",e),t().element(function(){t().bootstrap("#notification-stream-icon-container",[n.Z.name])}),(0,i.importFilesUnderPath)(o(8652)),(0,i.importFilesUnderPath)(o(3748)),(0,i.importFilesUnderPath)(o(3702)),(0,i.importFilesUnderPath)(o(4903)),(0,i.importFilesUnderPath)(o(3545)),e=o(6012),(0,i.templateCacheGenerator)(t(),"notificationStreamHtmlTemplate",e),t().element(function(){t().bootstrap(".notification-stream-base",[a.Z.name])}),n.Z,a.Z}()}();

/* Bundle detector */
window.Roblox && window.Roblox.BundleDetector && window.Roblox.BundleDetector.bundleDetected("NotificationStream");