;// bundle: notificationStream___6eb8d2347f3944625c11aa29407eb3f7_m
;// files: ~/viewapp/widgets/notificationStream/notificationStream.js, ~/viewapp/widgets/notificationStream/notificationStreamIcon.js, ~/viewapp/widgets/notificationStream/filters/abbreviateCountFilter.js, ~/viewapp/widgets/notificationStream/services/notificationStreamUtility.js, ~/viewapp/widgets/notificationStream/services/notificationStreamService.js, ~/viewapp/widgets/notificationStream/controllers/notificationStreamIconController.js, ~/viewapp/widgets/notificationStream/controllers/notificationStreamController.js, ~/viewapp/widgets/notificationStream/controllers/notificationsController.js, ~/viewapp/widgets/notificationStream/directives/notificationIndicatorDirective.js, ~/viewapp/widgets/notificationStream/directives/notificationContentDirective.js, ~/viewapp/widgets/notificationStream/directives/notificationCardDirective.js, ~/viewapp/widgets/notificationStream/directives/friendRequestDirective.js, ~/viewapp/widgets/notificationStream/directives/lazyLoadingDirective.js, ~/viewapp/widgets/notificationStream/directives/clickInCardDirective.js, ~/viewapp/widgets/notificationStream/directives/privateMessageDirective.js, ~/viewapp/widgets/notificationStream/directives/testDirective.js

;// ~/viewapp/widgets/notificationStream/notificationStream.js
"use strict";var notificationStream=angular.module("notificationStream",[]);

;// ~/viewapp/widgets/notificationStream/notificationStreamIcon.js
"use strict";var notificationStreamIcon=angular.module("notificationStreamIcon",["notificationStream"]);

;// ~/viewapp/widgets/notificationStream/filters/abbreviateCountFilter.js
"use strict";notificationStreamIcon.filter("abbreivateCount",function(){var n=100,t={100:"99+",1e3:"1K+"};return function(i,r,u){return(r||(r=n),u||(u=t[r]),i>=r)?u:i}});

;// ~/viewapp/widgets/notificationStream/services/notificationStreamUtility.js
"use strict";notificationStream.factory("notificationStreamUtility",["$log",function(){var t={test:"Test",friendRequestReceived:"FriendRequestReceived",friendRequestAccepted:"FriendRequestAccepted",privateMessageReceived:"PrivateMessageReceived"},i={profileLinkName:"goToProfilePage",profileLink:"/users/{id}/profile",friendRequestLinkName:"viewAllFriendRequests",friendRequestTabName:"Friends",friendRequestLink:"/users/friends#!/friend-requests",settingLinkName:"goToSettingPage",settingTabName:"Settings",settingLink:"/my/account#!/privacy",friendsTabName:"Friends",friendsLink:"/users/friends",inboxTabName:"Messages",inboxLink:"/my/messages/#!/inbox",inboxMessageDetailQuery:"?conversationId="},r={boldLink:"<a class='font-bold'>{username}</a>",userLink:"<a class='text-name small' type='goToProfilePage' user_id='{userid}' href='{profilelink}'>{username}</a>"};return{templates:{notificationIndicatorTemplate:"notification-indicator",notificationContentTemplate:"notification-content",friendRequestReceivedTemplate:"friend-request-received",friendRequestAcceptedTemplate:"friend-request-accepted",friendRequestTemplate:"friend-request",privateMessageTemplate:"private-message",testTemplate:"test"},links:i,textTemplate:{newNotificationPostfix:" New Notification",noNetworkConnectionText:"Connecting..."},stringTemplates:r,layout:{pageDataInitialized:!1,firstTimeNotificationStream:!1,getRecentDataInitialized:!1,isNotificationContentOpen:!1,isLazyLoadingRequested:!1,isGetRecentDataLoadedRequested:!0,notificationsScrollbarSelector:"#notification-stream-scrollbar",settingLink:Roblox&&Roblox.Endpoints?Roblox.Endpoints.getAbsoluteUrl(i.settingLink):i.settingLink,friendRequestLink:Roblox&&Roblox.Endpoints?Roblox.Endpoints.getAbsoluteUrl(i.friendRequestLink):i.friendRequestLink,bannerEnabled:!1,emptyNotificationEnabled:!1,notificationsLazyLoadingEnabled:!1,isNotificationsLoading:!1,bannerText:"",errorText:"",introTextForDesktop:"Click here to see your notifications!",introTextForMobile:"Tap here to see your notifications!",dataBindSelector:"#notification-stream",dataContainerSelector:"#notification-stream-container"},notificationApiParams:{startIndexOfNotifications:0,pageSizeOfNotifications:10,loadMoreNotifications:!1},library:{unreadNotifications:0,userIdList:[],userLibrary:{},prefixLocalStoragekey:"user_",inApp:!1,isPhone:!1,isTouch:Roblox&&Roblox.DeviceFeatureDetection?Roblox.DeviceFeatureDetection.isTouch:!1,eventStreamMetaData:{}},notificationSourceType:t,signalRType:{NewNotification:"NewNotification",NotificationsRead:"NotificationsRead",NotificationMarkedInteracted:"NotificationMarkedInteracted",NotificationRevoked:"NotificationRevoked"},friendRequestReceivedLayout:{defaultPrefixText:"You have ",defaultPostfixTextBySingle:" new friend request.",defaultPostfixTextByMulti:" new friend requests.",friendRequestTextBySingle:" sent you a friend request.",friendRequestTextByMulti:" sent you friend requests.",requestConfirmedTextBySingle:" is now your friend!",requestConfirmedTextByMulti:" are now your friends!"},friendRequestAcceptedLayout:{defaultPrefixText:"You have ",defaultPostfixTextBySingle:" new friend.",defaultPostfixTextByMulti:" new friends.",friendRequestAcceptedText:" accepted your friend request.",requestConfirmedText:""},friendRequestActionType:{acceptIgnoreBtns:"AcceptIgnoreBtns",chatBtn:"chatBtn",viewAllBtn:"ViewAllBtn"},getAbsoluteUrl:function(n,t){return Roblox&&Roblox.Endpoints?Roblox.Endpoints.generateAbsoluteUrl(n,t,!0):getFormatString(n,t)},getFormatString:function(n,t){var i,r,u;for(i in t)r=t[i],u=new RegExp("{"+i.toLowerCase()+"(:.*?)?\\??}"),n=n.replace(u,r);return n},isNotificationTypeValid:function(n){var i=!1,r;for(r in t)if(t[r]===n){i=!0;break}return i},isCardClickable:function(n){var i=n.NotificationSourceType;switch(i){case t.friendRequestAccepted:return n.EventCount>1||n.EventCount===1&&n.Metadata.length===0;case t.privateMessageReceived:return!0}return!1},normalizeUser:function(n,i){var r={userId:null,userName:null};switch(n){case t.friendRequestReceived:r.userId=i.SenderUserId,r.userName=i.SenderUserName;break;case t.friendRequestAccepted:r.userId=i.AccepterUserId,r.userName=i.AccepterUserName;break;case t.privateMessageReceived:r.userId=i.AuthorUserId,r.userName=i.AuthorUserName}return r},getUserHtmlTemplate:function(n,i){var u="";switch(n){case t.friendRequestAccepted:u=i>1?r.boldLink:r.userLink;break;case t.friendRequestReceived:default:u=r.userLink}return u},normalizeDisplayText:function(n,i){var r={};switch(n){case t.friendRequestReceived:r={defaultPrefixText:this.friendRequestReceivedLayout.defaultPrefixText,defaultPostfixText:i===1?this.friendRequestReceivedLayout.defaultPostfixTextBySingle:this.friendRequestReceivedLayout.defaultPostfixTextByMulti,displayText:i===1?this.friendRequestReceivedLayout.friendRequestTextBySingle:this.friendRequestReceivedLayout.friendRequestTextByMulti,requestConfirmedText:i===1?this.friendRequestReceivedLayout.requestConfirmedTextBySingle:this.friendRequestReceivedLayout.requestConfirmedTextByMulti};break;case t.friendRequestAccepted:r={defaultPrefixText:this.friendRequestAcceptedLayout.defaultPrefixText,defaultPostfixText:i===1?this.friendRequestAcceptedLayout.defaultPostfixTextBySingle:this.friendRequestAcceptedLayout.defaultPostfixTextByMulti,displayText:this.friendRequestAcceptedLayout.friendRequestAcceptedText,requestConfirmedText:this.friendRequestAcceptedLayout.requestConfirmedText}}return r},isResultValid:function(n){return n&&(n.Status==="success"||n.success)},buildScrollbar:function(n){var t=angular.element(document.querySelector(n));t.mCustomScrollbar({autoHideScrollbar:!1,autoExpandScrollbar:!1,contentTouchScroll:1e4,documentTouchScroll:!1,mouseWheel:{preventDefault:!0},advanced:{autoScrollOnFocus:!1}})}}}]);

;// ~/viewapp/widgets/notificationStream/services/notificationStreamService.js
"use strict";notificationStream.factory("notificationStreamService",["httpService","$q","$log","urlService",function(n,t,i,r){var u="/notification-stream/notification-stream-data",f="/api/friends/acceptfriendrequest",e="/api/friends/declinefriendrequest";return{endpoints:{initializeData:{url:r.getAbsoluteUrl(u),retryable:!0},acceptFriendRequest:{url:r.getAbsoluteUrl(f),retryable:!1},ignoreFriendRequest:{url:r.getAbsoluteUrl(e),retryable:!1}},setApiEndpoints:function(n){this.endpoints.unreadCount={url:n+"/notifications/v1/stream/unread-count",retryable:!0,withCredentials:!0},this.endpoints.getRecent={url:n+"/notifications/v1/stream/get-recent",retryable:!0,withCredentials:!0},this.endpoints.clearUnread={url:n+"/notifications/v1/stream/clear-unread",retryable:!1,withCredentials:!0},this.endpoints.markInteracted={url:n+"/notifications/v1/stream/mark-interacted",retryable:!1,withCredentials:!0},this.endpoints.updateNotificationSettings={url:n+"/notifications/v1/update-notification-settings",retryable:!1,withCredentials:!0}},initialize:function(){var t={};return n.httpGet(this.endpoints.initializeData,t)},unreadCount:function(){var t={};return n.httpGet(this.endpoints.unreadCount,t)},clearUnread:function(){var t={};return n.httpPost(this.endpoints.clearUnread,t)},getRecentNotifications:function(t,i){var r={startIndex:t,maxRows:i};return n.httpGet(this.endpoints.getRecent,r)},markInteracted:function(t){var i={eventId:t};return n.httpPost(this.endpoints.markInteracted,i)},acceptFriend:function(t,i){var r={targetUserID:i,invitationID:t};return n.httpPost(this.endpoints.acceptFriendRequest,r)},ignoreFriend:function(t,i){var r={targetUserID:i,invitationID:t};return n.httpPost(this.endpoints.ignoreFriendRequest,r)},updateNotificationSettings:function(t,i){var u={NotificationSourceType:t,ReceiverDestinationType:"NotificationStream",IsEnabled:i},r=[];return r.push(u),n.httpPost(this.endpoints.updateNotificationSettings,r)}}}]);

;// ~/viewapp/widgets/notificationStream/controllers/notificationStreamIconController.js
"use strict";notificationStreamIcon.controller("notificationStreamIconController",["$scope","$document","$log",function(){}]);

;// ~/viewapp/widgets/notificationStream/controllers/notificationStreamController.js
"use strict";notificationStream.controller("notificationStreamController",["$scope","$document","$timeout","notificationStreamService","notificationStreamUtility","userService","eventStreamService","$log",function(n,t,i,r,u,f,e,o){function h(){Roblox&&Roblox.Popover&&i(function(){return Roblox.Popover.setUpTrianglePosition(n.layout.dataBindSelector,n.layout.dataContainerSelector)})}function c(){if(angular.isDefined(Roblox.RealTime)){var t=Roblox.RealTime.Factory.GetClient();t.SubscribeToConnectionEvents(n.handleSignalRSuccess,n.handleSignalRSuccess,n.handleSignalRError),t.Subscribe("NotificationStream",function(t){o.debug("--------- this is NotificationStream subscription -----------"+t.Type);switch(t.Type){case u.signalRType.NewNotification:n.updateNewNotificationInfo();break;case u.signalRType.NotificationsRead:n.clearUnreadNotifications();break;case u.signalRType.NotificationRevoked:n.getUnreadNotificationCount()}})}}function l(){n.layout=angular.copy(u.layout),n.notificationApiParams=angular.copy(u.notificationApiParams),n.getUnreadNotificationCount(),n.library.inApp&&(n.openNotificationStream(),n.layout.isNotificationContentOpen=!0)}function a(){n.library=u.library,n.resetNotificationStreamData(),r.initialize().then(function(t){t&&(r.setApiEndpoints(t.NotificationDomain),u.layout.pageDataInitialized=!0,n.library.currentUserId=t.CurrentUserId,n.library.inApp=t.InApp,n.library.isPhone=t.IsUserOnPhone,n.library.inAndroidApp=t.InAndroidApp,n.library.iniOSApp=t.IniOSApp,n.library.bannerDismissTimeSpan=t.BannerDismissTimeSpan,n.library.signalRDisconnectionResponseInMilliseconds=t.SignalRDisconnectionResponseInMilliseconds,n.library.eventStreamMetaData={userId:t.CurrentUserId,inApp:t.InApp})},function(){o.debug("----- initialize data request failed ----")})}n.buildNotificationsList=function(t){var i=[],r;t.forEach(function(t){var f=t.Metadata;r=t.NotificationSourceType,u.isNotificationTypeValid(r)&&(f.forEach(function(t){var e=u.normalizeUser(r,t),f,o;if(e&&e.userId!=null&&e.userName!=null){if(f=e.userId,o=e.userName,n.library.userIdList.indexOf(f)>-1)return!1;i.push(f),n.library.userIdList.push(f),n.library.userLibrary[f]={id:f,name:o,profileLink:u.getAbsoluteUrl(u.links.profileLink,{id:f})}}}),t.isClickable=u.isCardClickable(t),n.notificationIds.indexOf(t.Id)<0&&n.notificationIds.push(t.Id),n.notifications[t.Id]=t)}),n.layout.emptyNotificationEnabled=n.notificationIds.length===0,i.length>0&&f.getMultiUserAvatar(i).then(function(t){var r=t.data;r&&r.length>0&&r.forEach(function(t,r){n.library.userLibrary[i[r]].thumbnail=t})},function(){o.debug("----- getMultiUserAvatar request failed ----")})},n.getRecentNotifications=function(){n.layout.getRecentDataInitialized=!1,r.getRecentNotifications(n.notificationApiParams.startIndexOfNotifications,n.notificationApiParams.pageSizeOfNotifications).then(function(t){n.layout.getRecentDataInitialized=!0,n.layout.isGetRecentDataLoadedRequested=!1,t&&t.length>0&&(n.buildNotificationsList(t),n.layout.isLazyLoadingRequested=!0,t.length===n.notificationApiParams.pageSizeOfNotifications&&(n.notificationApiParams.startIndexOfNotifications=n.notificationApiParams.startIndexOfNotifications+n.notificationApiParams.pageSizeOfNotifications,n.notificationApiParams.loadMoreNotifications=!0))},function(){o.debug("--- getRecentNotifications call failed ----- "),n.layout.getRecentDataInitialized=!0})},n.clearUnreadNotifications=function(){n.library.unreadNotifications>0&&(n.library.unreadNotifications=0,t.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:0,isNotificationContentOpen:n.layout.isNotificationContentOpen}))},n.openNotificationStream=function(){n.layout.isGetRecentDataLoadedRequested&&(n.resetNotificationStreamData(),n.getRecentNotifications()),n.library.unreadNotifications>0&&r.clearUnread().then(function(t){u.isResultValid(t)?n.clearUnreadNotifications():o.debug("--- clearUnread does not return success callback. ")},function(){o.debug("--- clearUnread call failed ----- ")})},n.toggleNotificationContent=function(t){t?n.layout.isNotificationContentOpen=!1:(n.layout.isNotificationContentOpen=!n.layout.isNotificationContentOpen,n.layout.isNotificationContentOpen&&n.layout.isGetRecentDataLoadedRequested&&(n.openNotificationStream(),h())),n.layout.isNotificationContentOpen&&n.layout.bannerEnabled&&(n.layout.bannerEnabled=!1),n.layout.isLazyLoadingRequested&&(n.layout.isLazyLoadingRequested=!1)},n.getUnreadNotificationCount=function(){r.unreadCount().then(function(i){u.isResultValid(i)&&(n.library.unreadNotifications=i.UnreadNotifications,n.layout.isNotificationContentOpen?(n.layout.bannerText=n.library.unreadNotifications+u.textTemplate.newNotificationPostfix,n.layout.bannerText+=n.library.unreadNotifications>1?"s":""):t.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:i.UnreadNotifications,isNotificationContentOpen:n.layout.isNotificationContentOpen}))},function(){o.debug("--- unreadCount call failed ----- ")})},n.resetNotificationStreamData=function(){n.notificationIds=[],n.notifications={},n.notificationApiParams&&(n.notificationApiParams.startIndexOfNotifications=0)},n.reloadNotificationStreamData=function(){n.resetNotificationStreamData(),n.library.unreadNotifications>0&&r.clearUnread(),n.getRecentNotifications(),n.layout.bannerEnabled=!1},n.updateNewNotificationInfo=function(){n.layout.isGetRecentDataLoadedRequested=!0,n.getUnreadNotificationCount(),n.layout.isNotificationContentOpen&&n.$evalAsync(function(){n.layout.bannerEnabled=!0})},n.handleSignalRSuccess=function(){n.$evalAsync(function(){n.layout.errorBannerEnabled=!1})},n.handleSignalRError=function(){i(function(){n.layout.errorBannerEnabled=!0,n.layout.errorText=u.textTemplate.noNetworkConnectionText},n.library.signalRDisconnectionResponseInMilliseconds)},a(),t.bind("Roblox.Popover.Status",function(t,i){o.debug("notificationStreamController"),n.layout&&n.$evalAsync(function(){if(!n.layout.isNotificationContentOpen){var t=angular.copy(n.library.eventStreamMetaData);t.countOfUnreadNotification=n.library.unreadNotifications,e.sendEventWithTarget(e.eventNames.notificationStream.openContent,i.eventType,t)}n.toggleNotificationContent(i.isHidden)})});var s=n.$watch(function(){return u.layout.pageDataInitialized},function(n,t){angular.isDefined(n)&&n&&n!==t&&(o.debug("----- initializeLayout ----"),l(),c())});n.$on("$destroy",function(){s&&s()})}]);

;// ~/viewapp/widgets/notificationStream/controllers/notificationsController.js
"use strict";notificationStream.controller("notificationsController",["$scope","notificationStreamService","notificationStreamUtility","hybridService","eventStreamService","urlService","chatDispatchService","$document","$log",function(n,t,i,r,u,f,e,o,s){function h(t,i,r){var e=n.notifications[i],f=angular.copy(n.library.eventStreamMetaData);f.notificationType=e.NotificationSourceType,u.sendEventWithTarget(t,r,f)}n.acceptFriend=function(r,f,e){s.debug("---------------- acceptFriend --------- ");var c=n.notifications[f];n.interactNotification(c),t.acceptFriend(n.library.currentUserId,r).then(function(t){if(i.isResultValid(t)){var r=n.notifications[f];r.friendRequestActionType=i.friendRequestActionType.chatBtn,r.Metadata[0].IsAccepted=!0,r.isFlipped=!0,o.triggerHandler("Roblox.Friends.CountChanged"),h(u.eventNames.notificationStream.acceptFriendRequest,f,e.type)}})},n.ignoreFriend=function(r,f,e){s.debug("---------------- ignoreFriend --------- ");var o=n.notifications[f];n.interactNotification(o),t.ignoreFriend(n.library.currentUserId,r).then(function(t){if(i.isResultValid(t)){var r=n.notifications[f];r.isSlideOut=!0,h(u.eventNames.notificationStream.ignoreFriendRequest,f,e.type)}})},n.removeNotification=function(t){s.debug("---------------- removeNotification --------- notificationId:  "+t);var i=n.notificationIds.indexOf(t);n.notificationIds.splice(i,1),delete n.notifications[t]},n.chat=function(t,i,r){var f=n.notifications[i];n.interactNotification(f),e.startChat(t,n.library),h(u.eventNames.notificationStream.chat,i,r.type)},n.interactNotification=function(n){n.IsInteracted||t.markInteracted(n.Id).then(function(t){i.isResultValid(t)&&(n.IsInteracted=!0)})},n.clickCard=function(t){var u="",e={},h,o;switch(t.NotificationSourceType){case i.notificationSourceType.friendRequestReceived:n.interactNotification(t),t.EventCount>1||t.Metadata.length===0?(u=i.links.friendRequestLink,n.library.inApp?(e={feature:i.links.friendRequestTabName,urlPath:u},r.navigateToFeature(e,function(n){s.debug("openUserFriendsPage ---- status:"+n)})):window.location.href=f.getAbsoluteUrl(u)):t.Metadata&&t.Metadata.length>0&&(o=t.Metadata[0],u=i.links.profileLink,h=o.SenderUserId,n.library.inApp?r.openUserProfile(parseInt(h),function(n){s.debug("openUserProfile ---- status:"+n)}):window.location.href=i.getAbsoluteUrl(u,{id:h}));break;case i.notificationSourceType.friendRequestAccepted:n.interactNotification(t),u=i.links.friendsLink,n.library.inApp?(e={feature:i.links.friendsTabName,urlPath:u},r.navigateToFeature(e,function(n){s.debug("openUserFriendsPage ---- status:"+n)})):window.location.href=f.getAbsoluteUrl(u);break;case i.notificationSourceType.privateMessageReceived:n.interactNotification(t),t.EventCount>1||t.Metadata.length===0?u=i.links.inboxLink:t.Metadata&&t.Metadata.length>0&&(o=t.Metadata[0],u=i.links.inboxLink+i.links.inboxMessageDetailQuery+o.MessageId),n.library.inApp?(e={feature:i.links.inboxTabName,urlPath:u},r.navigateToFeature(e,function(n){s.debug("openUserProfile ---- status:"+n)})):window.location.href=f.getAbsoluteUrl(u)}},n.notificationSourceType=i.notificationSourceType}]);

;// ~/viewapp/widgets/notificationStream/directives/notificationIndicatorDirective.js
"use strict";notificationStreamIcon.directive("notificationIndicator",["notificationStreamUtility","$document","$log",function(n,t,i){return{restrict:"A",replace:!0,scope:!0,templateUrl:n.templates.notificationIndicatorTemplate,link:function(n){function f(t){n.layout=n.layout||{},n.layout.unreadNotifications=t.count,n.layout.isNotificationContentOpen=t.isNotificationContentOpen}t.bind("Roblox.NotificationStream.UnreadNotifications",function(t,r){i.debug(" ----- notificationStreamIconController --- args.count --------"+r.count),n.$evalAsync(f(r))})}}}]);

;// ~/viewapp/widgets/notificationStream/directives/notificationContentDirective.js
"use strict";notificationStream.directive("notificationContent",["notificationStreamService","notificationStreamUtility","$log",function(n,t){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationContentTemplate}}]);

;// ~/viewapp/widgets/notificationStream/directives/notificationCardDirective.js
"use strict";notificationStream.directive("notificationCard",["$log","notificationStreamService",function(n,t){var i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"},r=function(){var n,t=document.createElement("supportedEvent");for(n in i)if(angular.isDefined(t.style[n]))return i[n]},u=r();return{restrict:"A",link:function(i,r){r.bind(u,function(t){n.debug("got a css transition event",t);var r=t.target.className.search("slide-out-left");r>=0&&i.$evalAsync(function(){i.removeNotification(i.notification.Id)})}),i.updateNotificationSetting=function(r){t.updateNotificationSettings(i.notification.NotificationSourceType,r).then(function(t){n.debug("turnOffNotification -- success",t),i.notification.isTurnOff=!r},function(){n.debug("turnOffNotification --fail")})}}}}]);

;// ~/viewapp/widgets/notificationStream/directives/friendRequestDirective.js
"use strict";notificationStream.directive("friendRequest",["notificationStreamService","notificationStreamUtility","$log",function(n,t){return{restrict:"A",replace:!0,scope:{notification:"=",library:"=",acceptFriend:"&",ignoreFriend:"&",chat:"&",interactNotification:"&"},templateUrl:t.templates.friendRequestTemplate,link:function(n){n.notificationSourceType=t.notificationSourceType,n.friendRequestLink=t.layout.friendRequestLink;var o=n.notification.Metadata,s=n.notification.NotificationSourceType,f=o.length,u=n.notification.EventCount?n.notification.EventCount:f,e="",h=function(){var i,r;n.userIds=[],n.notificationDisplayText="",o.forEach(function(i,r){var h=t.normalizeUser(s,i),f=h.userId,l=h.userName,a=n.library.userLibrary[f]&&n.library.userLibrary[f].profileLink?n.library.userLibrary[f].profileLink:t.getAbsoluteUrl(t.links.profileLink,{id:f}),c,o;n.userIds.indexOf(f)<0&&n.userIds.push(f),c=t.getUserHtmlTemplate(s,u),o=t.getFormatString(c,{userId:f,userName:l,profileLink:a}),r<1?e+=o:r<2&&(u>2?e+=", "+o+", ":u===2&&(e+=" and "+o))}),i=t.normalizeDisplayText(s,u),f===0?(e=i.defaultPrefixText+u+i.defaultPostfixText,n.notificationDisplayText=e):((u>2||u>f)&&(r=f>2?u-2:u-f,e+=" and "+r+(r===1?" other":" others")),n.notificationDisplayText=e+i.displayText,n.requestConfirmedText=e+i.requestConfirmedText)},c=function(){n.friendRequestActionType=t.friendRequestActionType,n.notification.NotificationSourceType===t.notificationSourceType.friendRequestReceived?n.notification.friendRequestActionType=f!==1||u!==1||o[0].IsAccepted?f===1&&u===1&&o[0].IsAccepted?t.friendRequestActionType.chatBtn:t.friendRequestActionType.viewAllBtn:o[0].IsAccepted?t.friendRequestActionType.chatBtn:t.friendRequestActionType.acceptIgnoreBtns:n.notification.NotificationSourceType===t.notificationSourceType.friendRequestAccepted&&f===1&&u===1&&(n.notification.friendRequestActionType=t.friendRequestActionType.chatBtn)},l=function(){h(),c()};l()}}}]);

;// ~/viewapp/widgets/notificationStream/directives/lazyLoadingDirective.js
"use strict";notificationStream.directive("lazyLoading",["notificationStreamService","notificationStreamUtility","$document","$log",function(n,t,i,r){return{restrict:"A",scope:!0,link:function(t,u){var e=function(){if(!t.notificationApiParams)return!1;t.notificationApiParams.loadMoreNotifications&&(t.layout.notiticationsLazyLoadingEnabled=!0,n.getRecentNotifications(t.notificationApiParams.startIndexOfNotifications,t.notificationApiParams.pageSizeOfNotifications).then(function(n){t.layout.notiticationsLazyLoadingEnabled=!1,n&&n.length>0?(t.buildNotificationsList(n),t.notificationApiParams.startIndexOfNotifications=t.notificationApiParams.startIndexOfNotifications+t.notificationApiParams.pageSizeOfNotifications,n.length<t.notificationApiParams.pageSizeOfNotifications&&(t.notificationApiParams.loadMoreNotifications=!1,t.notificationApiParams.startIndexOfNotifications=0)):(t.notificationApiParams.loadMoreNotifications=!1,t.notificationApiParams.startIndexOfNotifications=0)},function(){t.layout.notiticationsLazyLoadingEnabled=!1,r.debug("---error from get Notificaitons in lazyLoadingDirective.js---")}))},s=function(){u.mCustomScrollbar({autoExpandScrollbar:!1,scrollInertia:5,contentTouchScroll:1,mouseWheel:{preventDefault:!0},callbacks:{onTotalScrollOffset:100,onTotalScroll:e,onOverflowYNone:e}})},h=function(){r.debug("----- destroyScrollbar ----"),u.mCustomScrollbar("destroy")},c=function(){t.library.inApp?(Roblox.Scrollbar.setUpOverflowY(u,e),Roblox.Scrollbar.listenToScroll(i,null,e)):s()},o=t.$watch(function(){return t.layout&&t.layout.isLazyLoadingRequested},function(n,i){angular.isDefined(n)&&n!==i&&(r.debug("----- initializeLayout ----"),n?c():t.library.inApp||h())},!0);t.$on("$destroy",function(){o&&o()})}}}]);

;// ~/viewapp/widgets/notificationStream/directives/clickInCardDirective.js
"use strict";notificationStream.directive("clickInCard",["eventStreamService","hybridService","notificationStreamUtility","$log",function(n,t,i,r){return{restrict:"A",scope:!0,link:function(u,f){f.bind("click",function(f){var e,o,h,l,s,c;if(!f.target)return!1;if(e=angular.element(f.target),o=e.attr("type"),f.target&&o&&(h=angular.copy(u.library.eventStreamMetaData),u.notification&&(h.notificationType=u.notification.NotificationSourceType,u.interactNotification(u.notification)),l=n.eventNames.notificationStream[o],n.sendEventWithTarget(l,f.type,h),u.library.inApp)){f.stopPropagation(),f.preventDefault();switch(o){case i.links.settingLinkName:s={feature:i.links.settingTabName,urlPath:i.links.settingLink},t.navigateToFeature(s,function(n){r.debug("navigateToFeature ---- status:"+n)});break;case i.links.friendRequestLinkName:s={feature:i.links.friendRequestTabName,urlPath:i.links.friendRequestLink},t.navigateToFeature(s,function(n){r.debug("openUserProfile ---- status:"+n)});break;case i.links.profileLinkName:c=e.attr("href")&&e.attr("href").match(/users\/(\d+)/,"")?e.attr("href").match(/users\/(\d+)/,"")[1]:u.userIds[0],t.openUserProfile(parseInt(c),function(n){r.debug("openUserProfile ---- status:"+n)})}return!1}})}}}]);

;// ~/viewapp/widgets/notificationStream/directives/privateMessageDirective.js
"use strict";notificationStream.directive("privateMessage",["notificationStreamService","notificationStreamUtility","$log",function(n,t){return{restrict:"A",replace:!0,scope:{notification:"=",library:"="},templateUrl:t.templates.privateMessageTemplate,link:function(n){var u=function(){var i,u,r;n.notificationSourceType=t.notificationSourceType,n.friendRequestLink=t.layout.friendRequestLink,n.privateMessageLayout={displayUserId:null,displayUserName:"",messagePreview:"",isStacked:!1},i=n.notification.Metadata,u=n.notification.NotificationSourceType,(n.notification.EventCount>1||i&&i.length===0)&&(n.privateMessageLayout.isStacked=!0),i&&i.length>0&&(r=t.normalizeUser(u,i[0]),n.privateMessageLayout.displayUserId=r.userId,n.privateMessageLayout.displayUserName=r.userName,n.privateMessageLayout.messagePreview=i[0].BodyPreview)};u()}}}]);

;// ~/viewapp/widgets/notificationStream/directives/testDirective.js
"use strict";notificationStream.directive("test",["notificationStreamUtility","$log",function(n){return{restrict:"A",replace:!0,scope:!0,templateUrl:n.templates.testTemplate,link:function(n){var r=n.notification.Metadata;n.notificationDisplayText="",r.forEach(function(t){n.notificationDisplayText+=t.Detail})}}}]);
